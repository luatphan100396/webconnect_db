CREATE OR REPLACE PROCEDURE usp_Login_Register_New_Account
--======================================================
--Author: Linh Pham
--Created Date: 2020-12-28
--Description: Get imformation of Register New Account 
--Output:
--        +Ds1: 1 if success. Failed will raise exception
--======================================================
(
	@Inputs VARCHAR(30000)
)
	DYNAMIC RESULT SETS 1
	LANGUAGE SQL
P1: BEGIN
	DECLARE input_xml XML;
	
	DECLARE v_FIRST_NAME VARCHAR(30);
	DECLARE v_LAST_NAME VARCHAR(50);
	DECLARE v_ORGANIZATION VARCHAR(200);
	DECLARE v_TITLE VARCHAR(200);
	DECLARE v_EMAIL_ADDRESS CHAR(200);
	DECLARE v_PHONE VARCHAR(30);
	DECLARE v_EMAIL_USE_IND VARCHAR(1);
	DECLARE v_USER_NAME VARCHAR(128);
	DECLARE v_PASSWORD VARCHAR(128);
	DECLARE v_REQUESTED_CREDENTIALS CHAR(128);
	DECLARE v_STATUS VARCHAR(10);
	DECLARE CREATED_TIME TIMESTAMP;
	DECLARE v_MODIFIED_BY VARCHAR(50);
	
	DECLARE GLOBAL TEMPORARY TABLE SESSION.TmpGetInputs 
	(
		Field      VARCHAR(128),
		Value       VARCHAR(3000)
	) WITH REPLACE ON COMMIT PRESERVE ROWS;
 	
   DECLARE GLOBAL TEMPORARY TABLE SESSION.TmpFilterInputsMultiSelect 
	(
		Field      VARCHAR(128),
		Value       VARCHAR(128),
		Order  smallint  GENERATED BY DEFAULT AS IDENTITY  (START WITH 1 INCREMENT BY 1)  
	) WITH REPLACE ON COMMIT PRESERVE ROWS;

	DECLARE GLOBAL TEMPORARY TABLE SESSION.TmpGetListRequestCredential 
	(
		CREDENTIAL  VARCHAR(30),
		Order INT
	) WITH REPLACE ON COMMIT PRESERVE ROWS;
	
	SET input_xml =  xmlparse(document @Inputs);
	
	----- insert
	INSERT INTO SESSION.TmpGetInputs 
	(    
		Field,
		Value
	)
	 SELECT  
	 		nullif(trim(XML_BOOKS.field),''),
	 		nullif(trim(XML_BOOKS.value),'')	 
	FROM  
		XMLTABLE(
			'$doc/inputs/item' 
			PASSING input_xml AS "doc"
			COLUMNS 
			 
			Field      VARCHAR(128)  PATH 'field',
			Value       VARCHAR(3000)  PATH 'value' 
			) AS XML_BOOKS;
	SET input_xml =  xmlparse(document @Inputs);


	INSERT INTO SESSION.TmpFilterInputsMultiSelect 
	(    
		Field,
		Value 
	)
  SELECT  
		nullif(trim(XML_BOOKS.field),''),
	    nullif(trim(XML_BOOKS.value),'')	 	 
		FROM  
		XMLTABLE(
		'$doc/inputs/multi_item/item' 
		PASSING input_xml AS "doc"
		COLUMNS 
		 
		Field      VARCHAR(128)  PATH 'field',
		Value       VARCHAR(3000)  PATH 'value' 
		) AS XML_BOOKS;  
		
	
	INSERT INTO SESSION.TmpGetListRequestCredential(CREDENTIAL, Order)
  
   SELECT VALUE,ORDER
   FROM SESSION.TmpFilterInputsMultiSelect
   WHERE FIELD ='REQUESTED_CREDENTIALS';
  
	SET v_FIRST_NAME = (SELECT VALUE FROM SESSION.TmpGetInputs WHERE UPPER(Field) ='FIRST_NAME' LIMIT 1 with UR);
	SET v_LAST_NAME = (SELECT VALUE FROM SESSION.TmpGetInputs WHERE UPPER(Field) ='LAST_NAME' LIMIT 1 with UR);
	SET v_ORGANIZATION = (SELECT VALUE FROM SESSION.TmpGetInputs WHERE UPPER(Field) ='ORGANIZATION' LIMIT 1 with UR);
	SET v_TITLE = (SELECT VALUE FROM SESSION.TmpGetInputs WHERE UPPER(Field) ='TITLE' LIMIT 1 with UR);
	SET v_EMAIL_ADDRESS = (SELECT VALUE FROM SESSION.TmpGetInputs WHERE UPPER(Field) ='EMAIL_ADDRESS' LIMIT 1 with UR);
	SET v_PHONE = (SELECT VALUE FROM SESSION.TmpGetInputs WHERE UPPER(Field) ='PHONE' LIMIT 1 with UR);
	SET v_EMAIL_USE_IND = (SELECT VALUE FROM SESSION.TmpGetInputs WHERE UPPER(Field) ='INCLUDE_EMAIL' LIMIT 1 with UR);
	SET v_USER_NAME = (SELECT VALUE FROM SESSION.TmpGetInputs WHERE UPPER(Field) ='USER_NAME' LIMIT 1 with UR);
	SET v_PASSWORD = (SELECT VALUE FROM SESSION.TmpGetInputs WHERE UPPER(Field) ='PASSWORD' LIMIT 1 with UR);
	SET CREATED_TIME=(SELECT current timestamp  from sysibm.sysdummy1);
	SET v_STATUS= 'NEW';
	
    SET v_REQUESTED_CREDENTIALS =(
									SELECT 
										substr(xmlserialize(xmlagg(xmltext (','||CREDENTIAL) order by  t.Order) as VARCHAR(30000)),2)  
										    
									FROM SESSION.TmpGetListRequestCredential t
									);
	
	-- INPUT VALIDATION
		IF 
		v_FIRST_NAME IS NULL
		OR v_LAST_NAME IS NULL
		OR v_EMAIL_ADDRESS IS NULL
		OR v_USER_NAME IS NULL 
		OR v_PASSWORD IS NULL
		OR v_REQUESTED_CREDENTIALS IS NULL
		THEN
		 
	 	 SIGNAL SQLSTATE '65000' SET MESSAGE_TEXT = 'Input is not valid';
		
		END IF;
	--INSERT TABLE
	INSERT INTO ACCOUNT_REQUEST_TABLE
	(
		FIRST_NAME,
		LAST_NAME,
		EMAIL_ADDR,
		ORGANIZATION,
		TITLE,
		PHONE,
		EMAIL_USE_IND,
		STATUS, -- Approved, Rejected, New
		REQUESTED_CREDENTIAL,
		USER_NAME,
		PASSWORD,
		CREATED_TIME,
		MODIFIED_TIME,
		MODIFIED_BY
	)
	VALUES
	(
		v_FIRST_NAME,
		v_LAST_NAME,
		v_ORGANIZATION,
		v_EMAIL_ADDRESS,
		v_TITLE,
		v_PHONE,
		v_EMAIL_USE_IND,
		v_STATUS,
		v_REQUESTED_CREDENTIALS,
		v_USER_NAME,
		v_PASSWORD,
		CREATED_TIME,
		CREATED_TIME,
		NULL 
	);
	COMMIT;
	BEGIN
	DECLARE cursor1 CURSOR WITH RETURN for
	SELECT 
		1 AS RESULT
		    
	FROM sysibm.sysdummy1;
	
	-- Cursor left open for client application
	OPEN cursor1;
	END;
END P1
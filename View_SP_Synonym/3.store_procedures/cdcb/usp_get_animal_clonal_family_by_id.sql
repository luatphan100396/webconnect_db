CREATE OR REPLACE PROCEDURE usp_Get_Animal_Clonal_Family_By_ID
--======================================================
--Author: Trong Le
--Created Date: 2020-24-09
--Description: Get animal family: Member, Source code, Bod date
--Output: 
--        +Ds1: Animal famimy:
--					Member: INT_ID
--					Source code: SOURCE_CODE
--					Mod date: MODIFY_PDATE + 1960-01-01
--======================================================
( 
    IN @INT_ID CHAR(17), 
	IN @ANIM_KEY INT, 
	IN @SPECIES_CODE CHAR(1),
	IN @SEX_CODE CHAR(1),
	IN @IS_DATA_EXCHANGE char(1),
	IN @REQUEST_KEY BIGINT,
	IN @OPERATION_KEY BIGINT
)
DYNAMIC RESULT SETS 10
    
BEGIN

	-- Declaration
	DECLARE v_DEFAULT_DATE DATE;

	DECLARE EXPORT_FILE_NAME VARCHAR(300);
	DECLARE TEMPLATE_NAME			VARCHAR(200) ; 
	DECLARE LAST_ROW_ID 		    INT;
	
	DECLARE GLOBAL TEMPORARY TABLE SESSION.TmpAnimalFamily --DROP TABLE SESSION.TmpAnimalFamily
	(
		MEMBER		CHAR(17),
		SOURCE_CODE	CHAR(1),
		MOD_DATE	VARCHAR(10),
		INPUT 		varchar(128),
		ROW_ID 		INT GENERATED BY DEFAULT AS IDENTITY  (START WITH 1 INCREMENT BY 1)
		 
	)WITH REPLACE  ON COMMIT PRESERVE ROWS;
	
	SET v_DEFAULT_DATE = (SELECT STRING_VALUE FROM dbo.constants WHERE name ='Default_Date_Value' LIMIT 1 WITH UR);
	
	IF @IS_DATA_EXCHANGE ='0' THEN
		INSERT INTO SESSION.TmpAnimalFamily
		(
			MEMBER,
			SOURCE_CODE,
			MOD_DATE
		)
		SELECT
			ixt.INT_ID,
			cl.SOURCE_CODE,
			VARCHAR_FORMAT(DATE(v_DEFAULT_DATE) + cl.MODIFY_PDATE, 'YYYY-MM-DD') AS MOD_DATE
		FROM
			(SELECT	ANIM_KEY,
					SOURCE_CODE,
					MODIFY_PDATE
			FROM CLONE_TABLE
			WHERE BASE_ANIM_KEY = @ANIM_KEY
			) cl
		JOIN ID_XREF_TABLE ixt
			ON ixt.ANIM_KEY = cl.ANIM_KEY;
	ELSEIF @IS_DATA_EXCHANGE ='1' THEN
		INSERT INTO SESSION.TmpAnimalFamily
		(
			MEMBER,
			SOURCE_CODE,
			MOD_DATE,
			INPUT
		)
		SELECT
			ixt.INT_ID,
			cl.SOURCE_CODE,
			VARCHAR_FORMAT(DATE(v_DEFAULT_DATE) + cl.MODIFY_PDATE, 'YYYY-MM-DD') AS MOD_DATE,
			dx.LINE
		FROM
			(SELECT	ANIM_KEY,
					SOURCE_CODE,
					MODIFY_PDATE
			FROM CLONE_TABLE
			WHERE BASE_ANIM_KEY = @ANIM_KEY
			) cl
		JOIN ID_XREF_TABLE ixt
			ON ixt.ANIM_KEY = cl.ANIM_KEY
		JOIN (
			select ROW_KEY, 
				   LINE 
			from DATA_EXCHANGE_INPUT_TABLE  
			where REQUEST_KEY = @REQUEST_KEY
		)dx ON ixt.INT_ID = dx.LINE
				AND ixt.SPECIES_CODE ='0'
		ORDER BY ROW_KEY;
	END IF;
	
	SET LAST_ROW_ID = (SELECT MAX(ROW_ID) FROM SESSION.TmpAnimalFamily);
	IF @IS_DATA_EXCHANGE = '0' THEN
		BEGIN
			DECLARE CUR CURSOR WITH RETURN FOR
			SELECT MEMBER,
				   SOURCE_CODE,
				   MOD_DATE
			FROM SESSION.TmpAnimalFamily
			WITH UR;
			OPEN CUR;
		END;
	ELSEIF @IS_DATA_EXCHANGE = '1' THEN
		SET TEMPLATE_NAME 	='ANIM_CLONAL_FAMILY_RECORD'; 
		call usp_common_export_json_by_template('SESSION.TmpAnimalFamily',TEMPLATE_NAME,LAST_ROW_ID,EXPORT_FILE_NAME);

		--validate output
		IF EXPORT_FILE_NAME IS NULL THEN 
				SIGNAL SQLSTATE '65000' SET MESSAGE_TEXT = 'Export failed'; 
		END IF;

		UPDATE DATA_EXCHANGE_OPERATION_TABLE SET OUTPUT_PATH = EXPORT_FILE_NAME 
		WHERE OPERATION_KEY = @OPERATION_KEY;
		
		
		begin
			declare c1 cursor with return for
			select EXPORT_FILE_NAME from sysibm.sysdummy1;
	
			open c1;

		end;
	END IF;
	
END
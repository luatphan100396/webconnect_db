CREATE OR REPLACE PROCEDURE usp_Get_Bull_ID_By_NAAB_ID
--================================================================================
--Author: Linh Pham
--Created Date: 2021-01-18
--Description: Get list bull id from string input
--Output:
--        +Ds1: invalid bull ID : INT_ID
--        +Ds2: invalid bull id
--=================================================================================
(
	IN @INPUT_VALUE VARCHAR(10000) 
	,@DELIMITER VARCHAR(1) default ','
)
	DYNAMIC RESULT SETS 3
	LANGUAGE SQL
BEGIN
	    
	DECLARE GLOBAL TEMPORARY TABLE SESSION.TmpInputs
	(	
		INPUT_VALUE VARCHAR(128),
		ORDER INT  GENERATED BY DEFAULT AS IDENTITY 
      (START WITH 1 INCREMENT BY 1)
	
	)WITH REPLACE ON COMMIT PRESERVE ROWS;
	
	DECLARE GLOBAL TEMPORARY TABLE SESSION.TmpNAABLists   
	(   
		NAAB10_SEG VARCHAR(60),
		INT_ID CHAR(17),
		ANIM_KEY INT, 
		SEX_CODE char(1),
		SPECIES_CODE char(1), 
		ORDER INT
	) WITH REPLACE  ON COMMIT PRESERVE ROWS;
  
     
	   DECLARE GLOBAL TEMPORARY TABLE SESSION.TmpInputValid 
	(
		INPUT_VALUE varchar(128) 
	) WITH REPLACE ON COMMIT PRESERVE ROWS;
	
	
	INSERT INTO SESSION.TmpInputs(INPUT_VALUE)
	SELECT  ITEM FROM table(fn_Split_String (@INPUT_VALUE,@DELIMITER));
	
	-- Remove duplicate input
	MERGE INTO SESSION.TmpInputs as A
	 using
	 (
  
		 SELECT INPUT_VALUE, MIN(ORDER) AS MIN_ORDER
		 FROM SESSION.TmpInputs t	
		 GROUP BY INPUT_VALUE
		 with UR
	 )AS B
	 ON  A.INPUT_VALUE = B.INPUT_VALUE and A.ORDER <> B.MIN_ORDER 
	 WHEN MATCHED THEN
	 DELETE
	 ;
	  
	     -- Find matching animal id in id_xref_table
		INSERT INTO SESSION.TmpNAABLists
		(
			NAAB10_SEG,
			INT_ID,
			ANIM_KEY, 
			SEX_CODE,
			SPECIES_CODE,  
			ORDER
		)
		  
		 SELECT
		 	 ai.NAAB10_SEG, 
			 a.INT_ID,  
			 a.ANIM_KEY,
			 a.SEX_CODE,
			 a.SPECIES_CODE,
			 t.ORDER
		 FROM  SESSION.TmpInputs t
		 INNER JOIN AI_CODES_TABLE ai
		 	on trim(upper(t.INPUT_VALUE)) = upper(ai.NAAB10_SEG)
		 INNER JOIN ID_XREF_TABLE a
		 	ON ai.ANIM_KEY=a.ANIM_KEY
		 	where a.SEX_CODE='M'
		 	and a.SPECIES_CODE='0'
		 ORDER BY ORDER
		 with UR;
		 		 
		 
		 INSERT INTO SESSION.TmpInputValid 
		 (
		 INPUT_VALUE
		 )
		 SELECT NAAB10_SEG
		 FROM SESSION.TmpNAABLists a with UR;
  
	    -- Remove duplicate output, same animal ID but has different anim key
		
		MERGE INTO SESSION.TmpNAABLists as A
		 using
		 ( 
			 SELECT INT_ID, MIN(ANIM_KEY) AS MIN_ANIM_KEY -- keep min animal_key
			 FROM SESSION.TmpNAABLists t	
			 GROUP BY INT_ID with UR
		 )AS B
		 ON  A.INT_ID = B.INT_ID and A.ANIM_KEY <> B.MIN_ANIM_KEY
		 WHEN MATCHED THEN
		 DELETE
		 ;
		 
		 
	-- DS1: output list
     	begin
		 	DECLARE cursor1 CURSOR WITH RETURN for
		 		
		 	SELECT
		 	a.NAAB10_SEG,   
		 	a.INT_ID AS ANIMAL_ID,
		 	0 as HAS_ERROR,
			case when  a.ANIM_KEY is not null then '1'
			      else '0' 
			end as IS_LINK_TO_ANIMAL, 
			row_number()over(order by a.ORDER )  as ORDER
		 	FROM SESSION.TmpNAABLists a
		     
			ORDER BY ORDER with UR;
		  
		 	OPEN cursor1;
		 	 
	   end; 
	   
	  	-- DS2: invalid list
     	begin
		 	DECLARE cursor1_1 CURSOR WITH RETURN for
		 		
		 	SELECT DISTINCT i.INPUT_VALUE
		 	FROM SESSION.TmpInputs i
		 	LEFT JOIN SESSION.TmpInputValid valid
		 	ON i.INPUT_VALUE = valid.INPUT_VALUE
		 	WHERE valid.INPUT_VALUE IS NULL
		 	AND i.INPUT_VALUE <> '' with UR;
		 	OPEN cursor1_1;
		 	 
	   end;
	    
END 
CREATE OR REPLACE PROCEDURE rpt_Get_Animals_Eval_Report
--======================================================================================
--Author: Nghi Ta
--Created Date: 2020-05-13
--Description: get animal evaluation data(trait and index) for dashboard report
--Output: 
--       +Ds1: Animal information along with trait PTA and index anount
--======================================================================================
( in @input_char varchar(10000),
  in @page_number smallint default 1, 
  in @row_per_page smallint default 50,
  in @is_export smallint default 0,
  in @export_type varchar(5) default 'CSV')
 
 dynamic result sets  2
BEGIN
    
   DECLARE input_xml XML;
   
   DECLARE v_SEX varchar(15);
   DECLARE v_BREED_CODE char(2);
   DECLARE v_RUN_PDATE smallint;
   DECLARE DEFAULT_DATE char(10);
     
   DECLARE v_SUBSET_CODE varchar(30); 
   DECLARE v_RANK_BY varchar(10);
   DECLARE v_IS_SHOW_SCR smallint default 0; 
   DECLARE v_IS_SHOW_UnproventBulls smallint default 0; 
   DECLARE v_IS_SHOW_NAAB_Code smallint default 0; 
   DECLARE v_GET_LACTATION smallint default 0; 
   DECLARE sql_query varchar(30000);
   DECLARE sql_query_count varchar(10000);
   DECLARE sql_query_main_from varchar(10000);
   DECLARE sql_query_main_from_for_export varchar(10000);
   DECLARE sql_query_subset_code varchar(500); 
   
   DECLARE EXPORT_PATH varchar(200);
   DECLARE EXPORT_FILE_NAME varchar(300); 
   DECLARE sql_query_csv_header varchar(10000); 
   DECLARE C1 CURSOR WITH RETURN FOR D1; 
   DECLARE C2 CURSOR WITH RETURN FOR D2;
    
   DECLARE GLOBAL TEMPORARY TABLE SESSION.v_TmpTraitList
	(
		TRAIT  varchar(10) ,
		ORDER smallint
	) WITH REPLACE ON COMMIT PRESERVE ROWS;

   DECLARE GLOBAL TEMPORARY TABLE SESSION.v_TmpIndexList
	(
		INDEX  varchar(10) ,
		ORDER smallint
	) WITH REPLACE ON COMMIT PRESERVE ROWS;
   
   DECLARE GLOBAL TEMPORARY TABLE SESSION.v_TmpSubsetList
	(
		SUBSET_CODE  varchar(50)  
	) WITH REPLACE ON COMMIT PRESERVE ROWS;
   
   
   
DECLARE GLOBAL TEMPORARY TABLE SESSION.TmpFilterInputs 
	(
		Field      VARCHAR(50),
		Value       VARCHAR(50)
	) WITH REPLACE ON COMMIT PRESERVE ROWS;
	
 
DECLARE GLOBAL TEMPORARY TABLE SESSION.TmpFilterInputsRankBy 
	( 
		Value       VARCHAR(10)
	) WITH REPLACE ON COMMIT PRESERVE ROWS;
	
DECLARE GLOBAL TEMPORARY TABLE SESSION.TmpFilterInputsMultiSelect 
	(
		Field      VARCHAR(128),
		Value       VARCHAR(128),
		Order  smallint  GENERATED BY DEFAULT AS IDENTITY  (START WITH 1 INCREMENT BY 1)  
	) WITH REPLACE ON COMMIT PRESERVE ROWS;

 
 
	DECLARE GLOBAL TEMPORARY TABLE SESSION.tmpQueryCols
	(
		SELECT_QUERY  varchar(10000),
		SELECT_QUERY_ALIAS  varchar(1000)
	) WITH REPLACE ON COMMIT PRESERVE ROWS;
	
	DECLARE GLOBAL TEMPORARY TABLE SESSION.tmpQueryColsIndex
	(
		SELECT_QUERY  varchar(1000),
		SELECT_QUERY_HEADER_CSV  varchar(1000),
		SELECT_QUERY_COL_CSV  varchar(1000)
	) WITH REPLACE ON COMMIT PRESERVE ROWS;
   
   
   DECLARE GLOBAL TEMPORARY TABLE SESSION.tmpQueryRankBy
	(
		SELECT_QUERY  varchar(1000)
		
	) WITH REPLACE ON COMMIT PRESERVE ROWS;
		
   SET DEFAULT_DATE = (select STRING_VALUE FROM dbo.constants where name ='Default_Date_Value' LIMIT 1);
    
   SET @page_number = @page_number-1;
	
   
   set input_xml =  xmlparse(document @input_char);
    
INSERT INTO SESSION.TmpFilterInputs 
(    
	Field,
	Value
)
 SELECT  
		 XML_BOOKS.Field,
		 XML_BOOKS.Value		 
		FROM  
		XMLTABLE(
		'$doc/Inputs/Item' 
		PASSING input_xml AS "doc"
		COLUMNS 
		 
		Field      VARCHAR(128)  PATH 'Field',
		Value       VARCHAR(3000)  PATH 'Value' 
		) AS XML_BOOKS;       
    
  
INSERT INTO SESSION.TmpFilterInputsRankBy 
(     
	Value
)
 SELECT   
		XML_BOOKS.Value		 
		FROM  
		XMLTABLE(
		'$doc/Inputs/RankBy' 
		PASSING input_xml AS "doc"
		COLUMNS 
		 
		Field      VARCHAR(128)  PATH 'Field',
		Value       VARCHAR(3000)  PATH 'Value' 
		) AS XML_BOOKS;   
		
 INSERT INTO SESSION.TmpFilterInputsMultiSelect 
(    
	Field,
	Value 
)
 SELECT  
		 XML_BOOKS.Field,
		 XML_BOOKS.Value		 
		FROM  
		XMLTABLE(
		'$doc/Inputs/Multi_Item/Item' 
		PASSING input_xml AS "doc"
		COLUMNS 
		 
		Field      VARCHAR(128)  PATH 'Field',
		Value       VARCHAR(3000)  PATH 'Value' 
		) AS XML_BOOKS;  
   
   INSERT INTO SESSION.v_TmpTraitList(TRAIT, ORDER)
   SELECT REPLACE(upper(trim(VALUE)),'%','_PCT'),ORDER
   FROM SESSION.TmpFilterInputsMultiSelect
   WHERE FIELD ='TRAIT';
   
   
   INSERT INTO SESSION.v_TmpIndexList(INDEX, ORDER)
   SELECT upper(trim(VALUE)),ORDER
   FROM SESSION.TmpFilterInputsMultiSelect
   WHERE FIELD ='INDEX';
   
   INSERT INTO SESSION.v_TmpSubsetList(SUBSET_CODE)
   SELECT VALUE 
   FROM SESSION.TmpFilterInputsMultiSelect
   WHERE FIELD ='SUBSET_CODE';
 
   -- Validate
   IF (select count(1) from SESSION.v_TmpSubsetList) =0 THEN
       SIGNAL SQLSTATE VALUE '65000'
	   SET MESSAGE_TEXT = 'Subset code is missng!';
   END IF;
  
   
   SET v_SEX = (SELECT VALUE FROM SESSION.TmpFilterInputs WHERE FIELD ='SEX' limit 1);
   SET v_BREED_CODE = (SELECT VALUE FROM SESSION.TmpFilterInputs WHERE FIELD ='BREED_CODE' limit 1);
   SET v_RUN_PDATE = (SELECT VALUE FROM SESSION.TmpFilterInputs WHERE FIELD ='RUN_PDATE' limit 1);
   SET v_RANK_BY = (SELECT VALUE FROM SESSION.TmpFilterInputsRankBy limit 1);
   SET v_IS_SHOW_SCR = (SELECT count(1) FROM SESSION.v_TmpTraitList where trait ='SCR' limit 1);
   SET v_IS_SHOW_UnproventBulls = (SELECT count(1) FROM SESSION.v_TmpSubsetList WHERE  SUBSET_CODE ='Unproven Bulls' limit 1);
   SET v_IS_SHOW_NAAB_Code = (SELECT count(1) FROM SESSION.v_TmpSubsetList WHERE   SUBSET_CODE ='NAAB Code' limit 1);
   SET v_GET_LACTATION = (SELECT VALUE FROM SESSION.TmpFilterInputs WHERE FIELD ='GET_LACTATION' limit 1);   

   SET v_SUBSET_CODE = (
	   select substr(xmlserialize(xmlagg(xmltext ( ','''||SUBSET_CODE||'''')  ) as VARCHAR(30000)),2)  
									   									 
	   from SESSION.v_TmpSubsetList
	   where SUBSET_CODE not in ('A_F_G','NAAB Code','Unproven Bulls','Select All')
   ) ;
   
   -- Build where clause for subset list
   IF v_SEX ='Male' THEN
   
	   set sql_query_subset_code =(
	   select substr(xmlserialize(xmlagg(xmltext ( 'OR '|| case   when SUBSET_CODE ='Unproven Bulls' then 'coalesce(bv.MLK_DAUS_QTY,0) < 10'
															      when SUBSET_CODE ='NAAB Code' then '(bv.STATUS_CODE IN (''A'',''F'',''G'') AND  coalesce(bv.NAAB_CODE,'''') !='''')'
															      when SUBSET_CODE ='A_F_G' then 'bv.STATUS_CODE IN (''A'',''F'',''G'')'
															      else 'bv.STATUS_CODE in ('||SUBSET_CODE||')'
															      end
	                                             )  ) as VARCHAR(30000)),3)
	   from 
		 ( select SUBSET_CODE
		   from SESSION.v_TmpSubsetList
		   where SUBSET_CODE  in ('A_F_G','NAAB Code','Unproven Bulls')
		   union 
		   select v_SUBSET_CODE as SUBSET_CODE
		   from sysibm.sysdummy1
	   )a
	   where SUBSET_CODE <>''
	   )  ; 
 
    ELSE  -- Cow or heifer
         set v_SUBSET_CODE = (select replace(subset_code,'Select All','Cow_Heifer') FROM SESSION.v_TmpSubsetList limit 1);
           
   END IF;
   
    
    -- Build trait column
	   
	     insert into SESSION.tmpQueryCols
	     (SELECT_QUERY,
	      SELECT_QUERY_ALIAS
	     ) 
	     select   
	     case when v_SEX ='Male' then  substr(xmlserialize(xmlagg(xmltext ( ','|| case when t.TRAIT in ('FAT_PCT','PRO_PCT') then 'bv.PTA_'||t.TRAIT ||' AS '||t.TRAIT ||'_PTA'
								                                                       else 'bv.PTA_' ||t.TRAIT ||'_QTY AS  '||t.TRAIT||'_PTA'
												   										    ||',bv.PTA_' ||t.TRAIT ||'_REL_PCT AS '||t.TRAIT||'_REL_PTA'
												   	                               end 
												   	                       	) order by  t.Order) as VARCHAR(30000)),1)  
		    
		      else substr(xmlserialize(xmlagg(xmltext ( ','|| (case when t.TRAIT in ('FAT_PCT','PRO_PCT') then 'bv.PTA_'||t.TRAIT||' as '||t.TRAIT||'_PTA'
		                                                            else 'PTA_'||t.TRAIT||'_QTY AS '||t.TRAIT||'_PTA'
													           end 
													           )
													        || case  when t.TRAIT not in ('FAT_PCT','PRO_PCT') then ',PTA_'||t.TRAIT||'_REL_PCT AS '||t.TRAIT||'_REL_PTA'
													                else ''
													           end
													   ) order by  t.Order) as VARCHAR(30000)),1)  
		            
		      
		  end
		  , case when v_SEX ='Male' then substr(xmlserialize(xmlagg(xmltext ( ','|| case when t.TRAIT in ('FAT_PCT','PRO_PCT') then t.TRAIT ||'_PTA'
								                                                       else  t.TRAIT||'_PTA'
												   										    ||','||t.TRAIT||'_REL_PTA'
												   	                               end 
												   	                       	) order by  t.Order) as VARCHAR(30000)),1)  
		    
		         else  NULL 
		            
		      
		   end
	     from   (
		          select REPLACE(upper(trim(TRAIT_SHORT_NAME)),'%','_PCT') AS TRAIT 
		          from TRAIT_TABLE
		        ) trait 
	     inner join SESSION.v_TmpTraitList t 
	     on TRAIT.TRAIT = t.TRAIT
	      ;
	       
	       
	     -- Build index columns
	     insert into SESSION.tmpQueryColsIndex
	     (SELECT_QUERY,
	      SELECT_QUERY_HEADER_CSV,
	      SELECT_QUERY_COL_CSV
	     ) 
	     select   
	     case when v_SEX ='Male' then  substr(xmlserialize(xmlagg(xmltext ( ','||idx.INDEX_NAME||' as '||idx.INDEX_NAME
	                                           ||',NM_REL_PCT AS ' ||idx.INDEX_NAME ||'_REL'
										 	) order by  t.Order) as VARCHAR(30000)),1)  
		      else   substr(xmlserialize(xmlagg(xmltext ( ','||idx.INDEX_NAME||' as '||idx.INDEX_NAME
	                                           ||',NM_REL_PCT AS ' ||idx.INDEX_NAME ||'_REL'
										 	) order by  t.Order) as VARCHAR(30000)),1)  
		      
		  end
		     
		  ,substr(xmlserialize(xmlagg(xmltext ( ','''||idx.INDEX_SHORT_NAME|| ''' AS '||idx.INDEX_NAME
	                                             ||','''||idx.INDEX_SHORT_NAME ||'_REL'' AS '||idx.INDEX_NAME ||'_REL'
										  	) order by  t.Order) as VARCHAR(30000)),1)  
		    
		     
		  ,substr(xmlserialize(xmlagg(xmltext ( ','||idx.INDEX_NAME
	                                            ||','||idx.INDEX_NAME ||'_REL'
										  	) order by  t.Order) as VARCHAR(30000)),1)  
		     
		 
	     from  SESSION.v_TmpIndexList t  
	     inner join (
	      select TRIM(UPPER(INDEX_SHORT_NAME)) as INDEX_SHORT_NAME,
	              TRIM(UPPER(INDEX_NAME)) as INDEX_NAME
	      from INDEX_TABLE i
	     )idx 
	     on TRIM(UPPER(idx.INDEX_SHORT_NAME)) = t.INDEX;
	      
	     -- Build RANK columns
	    insert into SESSION.tmpQueryRankBy
	     (SELECT_QUERY  
	     ) 
	     select 
	     
	     case when v_SEX ='Male' then
							     substr(xmlserialize(xmlagg(xmltext ( ','||case when trait.TRAIT in ('FAT_PCT','PRO_PCT') then ' cast(bv.PTA_'||trait.TRAIT||' as float)'
							                                                    when trait.TRAIT like '%_AMT' then 'cast('||trait.TRAIT||' as float)'
							                                                    else 'cast(bv.PTA_' ||trait.TRAIT ||'_QTY as float)'
							                                                end 
		   	
		 									                                         )  ) as VARCHAR(30000)),2)   
		      else substr(xmlserialize(xmlagg(xmltext ( ','|| (case when trait.TRAIT in ('DPR','PL') then 'AGILSMALL(PTA_'||trait.TRAIT||'_QTY)'
		      														when trait.TRAIT like '%_AMT' then trait.TRAIT
		      														when trait.TRAIT in ('FAT_PCT','PRO_PCT') then 'AGILSMALL(PTA_'||trait.TRAIT||')'
													                else 'PTA_'||trait.TRAIT||'_QTY'
													           end 
													           )
													        
													   )  ) as VARCHAR(30000)),2)  
		            
		      
		  end
	     
	        
	     from   (
		          select REPLACE(upper(trim(TRAIT_SHORT_NAME)),'%','_PCT') AS TRAIT  
		          from TRAIT_TABLE
		          where upper(TRAIT_SHORT_NAME) = upper(v_RANK_BY)
		          union
		          
		          select upper(trim(INDEX_NAME)) AS TRAIT 
		          from INDEX_TABLE
		          where upper(INDEX_SHORT_NAME) = upper(v_RANK_BY)
		           
		        ) trait ;
		        
	     
		
	-- build from clause         
	IF v_SEX ='Male' THEN    
	set sql_query_main_from ='
	            BULL_EVL_TABLE_DECODE bv    
	            '||
	            case when @is_export =1 then 'LEFT JOIN ANIM_NAME_TABLE aname ON aname.INT_ID =bv.BULL_ID AND aname.SEX_CODE=''M''
                                              '
	                 else ''
	            end 
	            
	            || 
                 case when v_RANK_BY ='SCR' or (v_IS_SHOW_SCR =1 and @is_export =1) then '
                 LEFT JOIN BULL_FERT_TABLE bf ON bf.ANIM_KEY = bv.ANIM_KEY and bf.EVAL_PDATE = bv.EVAL_PDATE'
                      else ''
                 end
                      
                 ||
	            '
				WHERE 
				 bv.EVAL_BREED_CODE = '''||v_BREED_CODE||'''
				 AND bv.EVAL_PDATE =   '||cast(v_RUN_PDATE as varchar(10))||'
				 '||case when sql_query_subset_code <> '' then ' AND (
				                                                     ' ||sql_query_subset_code|| '
                													)'
				         else ''
				     end
				   ||'
				'
                     ;
       
	-- Build select clause
	set sql_query_main_from_for_export = 'SELECT 
	            '||case when v_RANK_BY ='SCR' then 'bf.ERCR_QTY as OrderBy'
                         else COALESCE((SELECT SELECT_QUERY FROM SESSION.tmpQueryRankBy LIMIT 1),'') || ' as OrderBy'
                   end ||'
				,bv.BULL_ID as INT_ID
				'||
				case when @is_export =1 then ',aname.ANIM_NAME AS LONG_NAME '
			        else ',bv.ANIM_KEY
			              ,bv.EVAL_PDATE'
			    end
				||'
				,bv.NAAB_CODE
				,bv.STATUS_CODE AS AI_STATUS
		        ,bv.NM_AMT 
		        ,cast(bv.NM_REL_PCT as varchar(5)) AS NM_REL_PCT
				,cast(bv.NM_PCTL as varchar(5)) AS NM_PCTL  
			    '||COALESCE((SELECT SELECT_QUERY FROM SESSION.tmpQueryColsIndex LIMIT 1),'')||'	
				'|| case when v_RANK_BY ='SCR' OR ( v_IS_SHOW_SCR =1 AND @is_export =1)  then ',FLOAT2CHAR(bf.ERCR_QTY*0.1,0.1) AS SCR_PA 
												     ,cast(bf.ERCR_REL_PCT as varchar(10)) AS SCR_REL
												     ,cast(bf.BREEDINGS_QTY as varchar(10)) AS SCR_BREEDINGS
				                                     '
                    else ''
                 end ||'
                 
                 '||COALESCE((SELECT SELECT_QUERY FROM SESSION.tmpQueryCols LIMIT 1),'')||'	
                 
			FROM '||sql_query_main_from ||'
                 
			'||
			case when @is_export =0 then '
			ORDER BY  
			coalesce(OrderBy,-999999) DESC, bv.BULL_ID  ' 
			        else ''
			   end
			||'
			 
			'||case when @is_export =0 then 'LIMIT '||cast(@row_per_page as varchar(10))||'
											 OFFSET '||cast(@page_number*@row_per_page as varchar(10)) 
			        else ''
			   end
			   ||' with UR  '
			  ;
	set sql_query = '
		
		SELECT  
		 '||case when @is_export =1 then 'OrderBy,'
			        else ''
			   end
			 ||'
		 bv.INT_ID
		 ,aname.ANIM_NAME AS LONG_NAME 
		 ,bv.NAAB_CODE
		 ,bv.AI_STATUS
         ,bv.NM_AMT 
         ,bv.NM_REL_PCT
		 ,bv.NM_PCTL
		 '||COALESCE((SELECT SELECT_QUERY FROM SESSION.tmpQueryColsIndex LIMIT 1),'')||'	
		 '||case when  v_RANK_BY = 'SCR' then  
											',bv.SCR_PA
										     ,bv.SCR_REL
										     ,bv.SCR_BREEDINGS'
				when v_IS_SHOW_SCR =1 AND  v_RANK_BY <> 'SCR' then  
											',FLOAT2CHAR(bf.ERCR_QTY*0.1,0.1) AS SCR_PA 
										     ,cast(bf.ERCR_REL_PCT as varchar(10)) AS SCR_REL
										     ,cast(bf.BREEDINGS_QTY as varchar(10)) AS SCR_BREEDINGS'
				 else ''
		  end ||'
		
		'||COALESCE((SELECT SELECT_QUERY_ALIAS FROM SESSION.tmpQueryCols LIMIT 1),'')||'	
         
		FROM
		( 
			'||sql_query_main_from_for_export||'
		)bv
		'||
		case when @is_export =0 then 'LEFT JOIN ANIM_NAME_TABLE aname ON aname.INT_ID = bv.INT_ID  AND aname.SEX_CODE=''M'''
		     else ''
		end 
		|| 
		case when  v_IS_SHOW_SCR =1 and v_RANK_BY <>'SCR' and @is_export =0 then  '
		                                                                          LEFT JOIN BULL_FERT_TABLE bf ON bf.ANIM_KEY = bv.ANIM_KEY and bf.EVAL_PDATE = bv.EVAL_PDATE '
		        else ''
		end ||'
		
		'||case when @is_export =0 then ' 
		
		ORDER BY  
		coalesce(OrderBy,-999999) DESC, bv.INT_ID with UR' 
			        else ''
			   end
		 ;  
	 
 -- Female
 ELSE
 
      -- build from clause      
      set sql_query_main_from ='
      COW_EVL_TABLE bv   
	   '
      ||
      case when @is_export =1 then 'LEFT JOIN ANIM_NAME_TABLE aname 
									   on aname.int_id = bv.int_id 
									   and aname.sex_code=''F'' '
           else ''
      end
      || 
      '
       WHERE
	   bv.EVAL_BREED_CODE = '''||v_BREED_CODE||'''
	   and bv.EVAL_PDATE =   '||cast(v_RUN_PDATE as varchar(10)) ||
	   case    when v_SUBSET_CODE ='Cow' then ' AND bv.LACT_QTY <>  0  '
	           when v_SUBSET_CODE ='Heifer' then ' AND bv.LACT_QTY = 0 ' 
               else '' -- get all
         end
                     ;
                      
          
     -- build select clause      
    set sql_query ='
    select '||case when @is_export =1 then 'OrderBy,'
			        else ''
			   end
			 ||'
		bv.INT_ID
		'||case when @is_export=1 then ',bv.LONG_NAME'
				        else ',aname.ANIM_NAME as LONG_NAME '
				  end 
		||' 
		 
		,bv.SIRE_ID  
		'||case when v_SUBSET_CODE like '%Cow%' then ' ,VARCHAR_FORMAT(to_date(bv.birth_date,''YYYYMMDD''),''YYYY-MM-DD'') AS BIRTH_DATE' 
		  		 else ''
		   end
	     ||case when  v_GET_LACTATION =1 then ',NULLIF(bv.LH_HERD_NUMBER,0) as HERD_CODE
                                                ,VARCHAR_FORMAT(to_date(bv.LH_CALV_DATE,''YYYYMMDD''),''YYYY-MM'') AS CALV_MY
                                                ,bv.LH_TERM_CODE as TERM_CODE
                                                ,NULLIF(bv.LH_DIM,0)  as DIM_QTY
                                                '                 
				    else ''
		   end 
	     ||'  
	    ,bv.NM_AMT
		,bv.NM_REL_PCT
		,bv.NM_PCTL 
		'||COALESCE((SELECT SELECT_QUERY FROM SESSION.tmpQueryColsIndex LIMIT 1),'')||'	
		'||COALESCE((SELECT SELECT_QUERY FROM SESSION.tmpQueryCols LIMIT 1),'')||'
		 
	 from (
	  select bv.*
	          ,bv.PTA_MF_REL_PCT as PTA_MLK_REL_PCT
	          ,bv.PTA_MF_REL_PCT as PTA_FAT_REL_PCT 
	          '||case when @is_export=1 then ',aname.ANIM_NAME as LONG_NAME'
				        else ''
				  end 
		        ||'
		        ,'|| COALESCE((SELECT SELECT_QUERY FROM SESSION.tmpQueryRankBy LIMIT 1),'') ||' as OrderBy
	   from '||sql_query_main_from||'
	   order by coalesce(OrderBy,-999999) DESC, bv.INT_ID 
	  '||case when @is_export =0 then 'LIMIT '||cast(@row_per_page as varchar(10))||'
									   OFFSET '||cast(@page_number*@row_per_page as varchar(10)) 
			        else ''
			   end
			 || '
		 with UR 
	  )bv
	 ' 
	 ||case when @is_export=0 then '
	                                  left join ANIM_NAME_TABLE aname 
									   on aname.int_id = bv.int_id 
									   and aname.sex_code=''F'' '
	        else ''
	   end
	 ||case when @is_export =0 then '
		ORDER BY  
		coalesce(OrderBy,-999999) DESC, bv.INT_ID with UR'
		  else ''
	end;
 
 END IF;
 
 
 set sql_query = replace(replace(sql_query,'&gt;','>'),'&lt;','<'); 
 set sql_query_main_from = replace(replace(sql_query_main_from,'&gt;','>'),'&lt;','<'); 
 set sql_query_main_from_for_export = replace(replace(sql_query_main_from_for_export,'&gt;','>'),'&lt;','<'); 
 
  
 -- Show data paging
 IF  @is_export = 0 THEN

 PREPARE D1 FROM  sql_query;
 	     OPEN C1;
 	 
    		set sql_query_count = '
      		SELECT COUNT(1) AS ROW_COUNT
     		FROM '||sql_query_main_from;   
		 
PREPARE D2 FROM  sql_query_count;
OPEN C2; 
     
--
--begin
-- declare cir cursor with return for
-- select sql_query,sql_query_count from sysibm.sysdummy1;
-- open cir;
--end;

     
     
-- Export data
ELSE   
		   set EXPORT_PATH = (select string_value from dbo.constants where name ='Export_Folder');
		   set EXPORT_FILE_NAME = case when v_SEX ='Male' then 'bull' 
		                               else lower(v_SUBSET_CODE)  -- Female (Cow or Heifer)
		                           end 
		                           || '_report_' 
		                           ||(select varchar_format(current date,'YYYYMMDD') || replace(cast(current time as varchar(10)),':','') from sysibm.sysdummy1);
		   
		 
		  set EXPORT_FILE_NAME =  EXPORT_PATH||'/'||EXPORT_FILE_NAME||'.csv';
		  
		  set sql_query_csv_header= 
		  (select '
		    SELECT 
		      '||case when v_SEX ='Male' then '999999 as OrderBy
										        ,''ANIMAL_ID'' AS INT_ID 
												,''LONG_NAME'' AS LONG_NAME 
												,''NAAB_CODE'' AS NAAB_CODE
												,''AI_STATUS'' AS AI_STATUS
												,''NM$'' AS NM_AMT
												,''NM$_REL'' AS NM_REL_PCT
												,''NM_PCTL'' AS NM_PCTL
												'
		              when v_SEX ='Female' and v_SUBSET_CODE like '%Cow%' then '
		            							  999999 as OrderBy
										        ,''ANIMAL_ID'' AS INT_ID 
												,''LONG_NAME'' AS LONG_NAME
												,''SIRE_ID'' AS SIRE_ID
												,''BIRTH_DATE'' AS BIRTH_DATE'
												||case when v_GET_LACTATION =1 then ',''HERD_CODE'' AS HERD_CODE
																					 ,''CALV_MY'' AS CALV_MY
																					 ,''TERM_CODE'' AS TERM_CODE
																					 ,''DIM'' AS DIM'
											  		  else ''
											   end||
												'
												
												,''NM$'' AS NM_AMT
												,''NM$_REL'' AS NM_REL_PCT
												,''NM_PCTL'' AS NM_PCTL
												'
					  when v_SEX ='Female' and v_SUBSET_CODE ='Heifer' then '
		            							  999999 as OrderBy
										        ,''ANIMAL_ID'' AS INT_ID 
												,''LONG_NAME'' AS LONG_NAME
												,''SIRE_ID'' AS SIRE_ID 
												,''NM$'' AS NM_AMT
												,''NM$_REL'' AS NM_REL_PCT
												,''NM_PCTL'' AS NM_PCTL
												'
					 else ''
					  
				 end
		        || COALESCE((SELECT SELECT_QUERY_HEADER_CSV FROM SESSION.tmpQueryColsIndex LIMIT 1),'') 
			     
			     ||case when v_IS_SHOW_SCR =1 then  
											',''SCR_PTA'' AS SCR_PA 
										     ,''SCR_REL'' AS SCR_REL
										     ,''SCR_BREEDINGS'' AS SCR_BREEDINGS'
				        else ''
		           end   
		         || coalesce((select substr(xmlserialize(xmlagg(xmltext ( ','||''''||t.TRAIT||'_PTA'' AS '||t.TRAIT||'_PTA'  
			                                             ||case when t.TRAIT not in ('FAT_PCT','PRO_PCT') then ','''||t.TRAIT||'_REL_PTA'' AS '||t.TRAIT||'_REL_PTA' 
				   										 	    else ''
				   										 	end
				   										 	) order by t.Order
				   										 	 ) as VARCHAR(1000)),1)  
			     
				     from  SESSION.v_TmpTraitList t
				     where trait <>'SCR'
			     ),'')
			      
	           ||' FROM SYSIBM.SYSDUMMY1'
	            
	           from SYSIBM.SYSDUMMY1
	           )
	           ;
	     
	     
	     
	         
	     set sql_query = 
	     'SELECT 
	     '|| case when v_SEX ='Male' then 'INT_ID 
									     ,LONG_NAME 
									     ,NAAB_CODE
									     ,AI_STATUS
									     ,NM_AMT
									     ,NM_REL_PCT
									     ,NM_PCTL
									     '
				 when v_SEX ='Female' and v_SUBSET_CODE like '%Cow%' then 
				                               'INT_ID 
												,LONG_NAME
												,SIRE_ID
												,BIRTH_DATE
												'
												||case when v_GET_LACTATION =1 then ',HERD_CODE
																					,CALV_MY
																					,TERM_CODE
																					,DIM'
											  		  else ''
											   end||
												' 
												,NM_AMT
												,NM_REL_PCT
												,NM_PCTL
												'
				 when v_SEX ='Female' and v_SUBSET_CODE ='Heifer' then '
		            							  INT_ID 
												,LONG_NAME
												,SIRE_ID
												,NM_AMT
												,NM_REL_PCT
												,NM_PCTL
												' 
				else ''
	         end
	     
	     
	     || COALESCE((SELECT SELECT_QUERY_COL_CSV FROM SESSION.tmpQueryColsIndex LIMIT 1),'') 
	     ||  case when v_IS_SHOW_SCR =1 then  
											',SCR_PA 
										     ,SCR_REL
										     ,SCR_BREEDINGS'
				        else ''
		           end   
		   ||coalesce((select substr(xmlserialize(xmlagg(xmltext ( ','||t.TRAIT||'_PTA'  
	                                             ||case when t.TRAIT not in ('FAT_PCT','PRO_PCT') then ','||t.TRAIT||'_REL_PTA' 
		   										 	    else ''
		   										 	end 
		   										 	) order by t.Order
		   										 	 ) as VARCHAR(1000)),1)  
	     
	     from  SESSION.v_TmpTraitList t
	     where trait <>'SCR'),'')
	     || ' 
	     FROM
	     ('
	     ||sql_query_csv_header||
	     '
	     UNION ALL
	     '
	     ||case when  v_SEX ='Female' then sql_query
	            else  sql_query_main_from_for_export
	       end||
	     ')a
	     order by coalesce(OrderBy,-999999) desc with UR';
	    
  		    
  		IF @export_type ='CSV' THEN 
 	  		CALL SYSPROC.ADMIN_CMD( 'export to '||EXPORT_FILE_NAME||' of DEL modified by NOCHARDEL 
 	  			 '||sql_query);
	  		
  		    begin
  		        declare cir cursor with return for
  		        select EXPORT_FILE_NAME from sysibm.sysdummy1;
  		        open cir;
  		    end;
  		    
--  		    
--  		    begin
--  		        declare cir cursor with return for
--  		        select sql_query , EXPORT_FILE_NAME from sysibm.sysdummy1;
--  		        open cir;
--  		    end;
--  		      begin
--  		        declare cir2 cursor with return for
--  		        select * from SESSION.tmpQueryCols;
--  		        open cir2;
--  		    end;
  		     
  		     
  		     
  		     
  		ELSE  
  		 PREPARE D1 FROM  sql_query;
	     OPEN C1;
  		END IF;	 
  			 	 
  END IF;
	 
	  
END



CREATE OR REPLACE PROCEDURE rpt_Get_Animals_NM_Pctl_table
--======================================================================================
--Author: Nghi Ta
--Created Date: 2020-06-08
--Description: get animal NM percentile tabble for dashboard report
--Output: 
--       +Ds1: Percentitle data per breed
--======================================================================================
( in @input_char varchar(10000))
 
 dynamic result sets  5
BEGIN
    
    DECLARE input_xml XML;
    
   DECLARE v_SEX varchar(15);
   DECLARE v_BREED_CODE char(2);
   DECLARE v_RUN_PDATE smallint;
   DECLARE DEFAULT_DATE char(10);
   DECLARE sql_index_column varchar(500);
   DECLARE sql_index_column_case_select varchar(500);
   DECLARE sql_query varchar(30000); 
   DECLARE sql_query_main_from varchar(30000);
   DECLARE sql_query_count varchar(30000);
   
   DECLARE i smallint default 0; 
   DECLARE C1 CURSOR WITH RETURN FOR D1; 
   DECLARE C2 CURSOR WITH RETURN FOR D2;
   
 	  
    DECLARE GLOBAL TEMPORARY TABLE SESSION.TmpFilterInputs 
	(
		Field      VARCHAR(50),
		Value       VARCHAR(50)
	) WITH REPLACE ON COMMIT PRESERVE ROWS;
	
	DECLARE GLOBAL TEMPORARY TABLE SESSION.TmpFilterInputsMultiSelect 
	(
		Field      VARCHAR(128),
		Value       VARCHAR(128),
		Order  smallint  GENERATED BY DEFAULT AS IDENTITY  (START WITH 1 INCREMENT BY 1)  
	) WITH REPLACE ON COMMIT PRESERVE ROWS;
	
	
    DECLARE GLOBAL TEMPORARY TABLE SESSION.TmpPercentile 
	(
		PCTL  smallint 
	) WITH REPLACE ON COMMIT PRESERVE ROWS;
	

	
	set input_xml =  xmlparse(document @input_char);
	
	   
	INSERT INTO SESSION.TmpFilterInputs 
	(    
		Field,
		Value
	)
	 SELECT  
		 XML_BOOKS.Field,
		 XML_BOOKS.Value		 
		FROM  
		XMLTABLE(
		'$doc/Inputs/Item' 
		PASSING input_xml AS "doc"
		COLUMNS 
		 
		Field      VARCHAR(128)  PATH 'Field',
		Value       VARCHAR(3000)  PATH 'Value' 
		) AS XML_BOOKS;     
		
			 
   SET v_SEX = (SELECT VALUE FROM SESSION.TmpFilterInputs WHERE FIELD ='SEX' limit 1);
   SET v_BREED_CODE = (SELECT VALUE FROM SESSION.TmpFilterInputs WHERE FIELD ='BREED_CODE' limit 1);
   SET v_RUN_PDATE = (SELECT VALUE FROM SESSION.TmpFilterInputs WHERE FIELD ='RUN_PDATE' limit 1);
   
   --build dynamic index columns to select
   
   select   
	     substr(xmlserialize(xmlagg(xmltext ( ',min('||INDEX_NAME||') AS '||INDEX_NAME
										 	) order by  t.INDEX_NUM) as VARCHAR(30000)),1)
		 ,substr(xmlserialize(xmlagg(xmltext ( 'when idx.INDEX ='''||t.INDEX||''' then pctl.'||INDEX_NAME||'
	           '
										 	) order by  t.INDEX_NUM) as VARCHAR(30000)),1)  
		 into sql_index_column,sql_index_column_case_select
	     from  (
	      select TRIM(UPPER(INDEX_SHORT_NAME)) as INDEX,
	              TRIM(UPPER(INDEX_NAME)) as INDEX_NAME,
	              INDEX_NUM

	      from INDEX_TABLE i 
	      where INDEX_SHORT_NAME in ('NM$','FM$','CM$','GM$')
	     )t ;
	     
	     
   while  i <=100 do 
		insert into SESSION.TmpPercentile (PCTL) values (i);
		set i =i+1;
	end while;
	     
   -- Create query     
   SET sql_query_main_from = 
    case when  v_SEX ='Male'  then 'BULL_EVL_TABLE_DECODE'
		               else 'COW_EVL_TABLE' 
		          end ||'
		  where eval_breed_code = '''||v_BREED_CODE||'''
		  and eval_pdate = '||v_RUN_PDATE||'  
		  and NM_PCTL <> ''--'' 
   ';
   SET sql_query = '
   select idx.INDEX,  
          idx.PCTL/10 as PCTL_GROUP,
          idx.PCTL,
          case '||sql_index_column_case_select||'   end as Value 
   from 
   (
	   select TRIM(UPPER(idx.INDEX_SHORT_NAME)) as INDEX,
	          pctl.PCTL
	   from INDEX_TABLE idx
	   cross join SESSION.TmpPercentile pctl
	   where idx.INDEX_SHORT_NAME in (''NM$'',''FM$'',''CM$'',''GM$'')
   ) idx
   left join
   (select case when NM_PCTL =''++'' then 100
               else cast(NM_PCTL as int)
           end as NM_PCTL
          '||sql_index_column||'
		  from 
		  '||sql_query_main_from||'
		  group by NM_PCTL
    )pctl
    on idx.PCTL = pctl.NM_PCTL
    order by idx.PCTL
	with UR
   ';
   
  set sql_query = replace(replace(sql_query,'&gt;','>'),'&lt;','<'); 
  
  set sql_query_count = 'select count(1) as NUM_ANIMAL from '||sql_query_main_from;
 
  -- Retrive data
   PREPARE D1 FROM  sql_query;
   OPEN C1;

  -- Retrive number of animal in calculation
   PREPARE D2 FROM  sql_query_count;
   OPEN C2;
 
END



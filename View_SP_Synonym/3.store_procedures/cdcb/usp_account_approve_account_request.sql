CREATE OR REPLACE PROCEDURE usp_Account_Approve_Account_Request
--======================================================
--Author: Tri Do
--Created Date: 2021-01-05
--Description: Approve Account Request
--Output: None
--======================================================
(
	@REQUEST_KEY INT
)
	DYNAMIC RESULT SETS 10
P1: BEGIN
	DECLARE V_CURRENT_TIME TIMESTAMP;
	DECLARE V_USER_KEY INT;
	DECLARE V_USER_NAME VARCHAR(128);
	DECLARE V_FIRST_NAME VARCHAR(30);
	DECLARE V_LAST_NAME VARCHAR(50);
	DECLARE V_EMAIL_ADDRESS VARCHAR(200);
	DECLARE SQLCODE INTEGER DEFAULT 0; 
    DECLARE RETCODE INTEGER DEFAULT 0;
	DECLARE ERR_MESSAGE VARCHAR(300);

	SET v_CURRENT_TIME = (SELECT CURRENT TIMESTAMP FROM SYSIBM.SYSDUMMY1);

	-- VALIDATION
	SET V_USER_NAME = (SELECT USER_NAME FROM ACCOUNT_REQUEST_TABLE WHERE REQUEST_KEY = @REQUEST_KEY);
	SET v_FIRST_NAME = (SELECT FIRST_NAME FROM ACCOUNT_REQUEST_TABLE WHERE REQUEST_KEY = @REQUEST_KEY);
	SET v_LAST_NAME = (SELECT LAST_NAME FROM ACCOUNT_REQUEST_TABLE WHERE REQUEST_KEY = @REQUEST_KEY);
	SET V_EMAIL_ADDRESS = (SELECT EMAIL_ADDR FROM ACCOUNT_REQUEST_TABLE WHERE REQUEST_KEY = @REQUEST_KEY);

	IF (SELECT FN_CHECK_EXIST_USERNAME(V_USER_NAME) FROM SYSIBM.SYSDUMMY1) = 1
	THEN
		SET ERR_MESSAGE = 'User name "'|| V_USER_NAME|| '" has already existed';
		SIGNAL SQLSTATE '65000' SET MESSAGE_TEXT = ERR_MESSAGE;
	END IF;
	IF (SELECT FN_CHECK_EXIST_EMAILADDRESS(v_EMAIL_ADDRESS) FROM SYSIBM.SYSDUMMY1) = 1
	THEN
		SET ERR_MESSAGE = 'Email address "'|| V_EMAIL_ADDRESS|| '" has already existed';
		SIGNAL SQLSTATE '65000' SET MESSAGE_TEXT = ERR_MESSAGE;
	END IF;
	
	-- BEGIN TRANSACTION
	
	BEGIN
	
		DECLARE CONTINUE HANDLER FOR SQLEXCEPTION, SQLWARNING, NOT FOUND
		SET retcode = SQLCODE;

		INSERT INTO USER_INFO_TABLE
		(  
			FIRST_NAME
			,LAST_NAME
			,EMAIL_ADDR
			,ORGANIZATION
			,STATUS_CODE
			,TITLE
			,PHONE
			,EMAIL_USE_IND
			,CREATED_TIME
			,MODIFIED_TIME
		) 
		SELECT aReqTable.FIRST_NAME
			   ,aReqTable.LAST_NAME
			   ,aReqTable.EMAIL_ADDR
			   ,aReqTable.ORGANIZATION
			   ,'A'
			   ,aReqTable.TITLE
			   ,aReqTable.PHONE
			   ,aReqTable.EMAIL_USE_IND
			   ,v_CURRENT_TIME
			   ,v_CURRENT_TIME
		FROM ACCOUNT_REQUEST_TABLE aReqTable
		WHERE aReqTable.REQUEST_KEY = @REQUEST_KEY;

		SET V_USER_KEY = (SELECT COALESCE(MAX(USER_KEY),V_USER_KEY)
	                      FROM USER_INFO_TABLE
					      WHERE FIRST_NAME = V_FIRST_NAME
						          AND LAST_NAME = V_LAST_NAME
						          AND EMAIL_ADDR = V_EMAIL_ADDRESS
						          AND CREATED_TIME =  V_CURRENT_TIME);

		INSERT INTO USER_ACCOUNT_TABLE
		(  
			USER_KEY
			,USER_NAME
			,PASSWORD
			,CREATED_TIME
			,MODIFIED_TIME  
		)
		SELECT V_USER_KEY
			   ,V_USER_NAME
			   ,aReqTable.PASSWORD
			   ,v_CURRENT_TIME
			   ,v_CURRENT_TIME
		FROM ACCOUNT_REQUEST_TABLE aReqTable
		WHERE aReqTable.REQUEST_KEY = @REQUEST_KEY;

		UPDATE ACCOUNT_REQUEST_TABLE
		SET STATUS = 'Approved'
			,MODIFIED_TIME = v_CURRENT_TIME
		WHERE REQUEST_KEY = @REQUEST_KEY;
	END;

		IF RETCODE < 0 THEN
			ROLLBACK;
			
			SET ERR_MESSAGE = (SELECT SYSPROC.SQLERRM (CAST(RETCODE AS VARCHAR(20))) FROM SYSIBM.SYSDUMMY1);
			SIGNAL SQLSTATE '65000' SET MESSAGE_TEXT = ERR_MESSAGE;
		ELSE
			COMMIT;
			BEGIN
				DECLARE CURSOR1 CURSOR WITH RETURN FOR
				SELECT 1 AS RESULT
				FROM SYSIBM.SYSDUMMY1;
				
				OPEN CURSOR1;
			END;
		END IF;
END P1
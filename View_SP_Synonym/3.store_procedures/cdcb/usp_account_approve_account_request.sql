CREATE OR REPLACE PROCEDURE usp_Account_Approve_Account_Request
--======================================================
--Author: Tri Do
--Created Date: 2021-01-05
--Description: Approve Account Request
--Output: None
--======================================================
(
	@REQUEST_KEY INT,
	@inputs VARCHAR(30000) 
)
	DYNAMIC RESULT SETS 10
P1: BEGIN
 
	DECLARE SQLCODE INTEGER DEFAULT 0; 
    DECLARE RETCODE INTEGER DEFAULT 0;
	DECLARE ERR_MESSAGE VARCHAR(300);
    DECLARE v_PASSWORD VARCHAR(128);
    DECLARE v_USER_KEY INT;
 

	-- VALIDATION
 
	-- BEGIN TRANSACTION
	
	BEGIN
	
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		SET retcode = SQLCODE;
		
			
			
		CALL usp_Account_Add_Edit_Account(@inputs,'1');
		
		UPDATE ACCOUNT_REQUEST_TABLE
		SET STATUS = 'Approved'
			,MODIFIED_TIME = current timestamp
		WHERE REQUEST_KEY = @REQUEST_KEY;				 
		
		
		
		SET v_PASSWORD = (select PASSWORD from  ACCOUNT_REQUEST_TABLE where REQUEST_KEY = @REQUEST_KEY); 
        
        SELECT
              ac.USER_KEY,
              a.PASSWORD
        INTO v_USER_KEY,
             v_PASSWORD
        
        FROM
        (
        SELECT USER_NAME,PASSWORD
			FROM ACCOUNT_REQUEST_TABLE 
			where REQUEST_KEY = @REQUEST_KEY
			LIMIT 1
		)a
		INNER JOIN USER_ACCOUNT_TABLE ac
		ON lower(a.USER_NAME) = lower(ac.USER_NAME)
		;         
		
		UPDATE USER_ACCOUNT_TABLE SET PASSWORD = v_PASSWORD WHERE USER_KEY = v_USER_KEY;
		
		 	 
	END;

		IF RETCODE < 0 THEN
			ROLLBACK;
			
			SET ERR_MESSAGE = (SELECT SYSPROC.SQLERRM (CAST(RETCODE AS VARCHAR(20))) FROM SYSIBM.SYSDUMMY1);
			SIGNAL SQLSTATE '65000' SET MESSAGE_TEXT = ERR_MESSAGE;
		ELSE
			COMMIT;
			BEGIN
				DECLARE CURSOR1 CURSOR WITH RETURN FOR
				SELECT 1 AS RESULT
				FROM SYSIBM.SYSDUMMY1;
				
				OPEN CURSOR1;
			END;
		END IF;
END P1

drop table BULL_EVL_TABLE_DECODE;
create table BULL_EVL_TABLE_DECODE

   (EVAL_BREED_CODE              char(2)       not NULL,
    BULL_ID                      char(17)      not NULL,
    EVAL_PDATE                   smallint      not NULL,  
    SOURCE_CODE                  char(1)       not NULL,
    ANIM_KEY                     integer       not NULL, 
	STATUS_CODE                  char(1)       not NULL  default 'N',
    NAAB_CODE char(10),
    MOST_DAU_HERD_QTY            smallint,
    NM_AMT varchar(10) NULL, 
    NM_REL_PCT varchar(10) NULL, 
    NM_PCTL                      char(2)       not NULL  default ' ',
	 PTA_MLK_QTY varchar(10) NULL, 
	 PTA_FAT_QTY varchar(10) NULL, 
	 PTA_PRO_QTY varchar(10) NULL, 
	 PTA_PL_QTY varchar(10) NULL, 
	 PTA_SCS_QTY varchar(10) NULL, 
	 PTA_DPR_QTY varchar(10) NULL, 
	 PTA_HCR_QTY varchar(10) NULL, 
	 PTA_CCR_QTY varchar(10) NULL, 
	 PTA_LIV_QTY varchar(10) NULL, 
	 PTA_GL_QTY varchar(10) NULL, 
	 PTA_MFV_QTY varchar(10) NULL, 
	 PTA_DAB_QTY varchar(10) NULL, 
	 PTA_KET_QTY varchar(10) NULL, 
	 PTA_MAS_QTY varchar(10) NULL, 
	 PTA_MET_QTY varchar(10) NULL, 
	 PTA_RPL_QTY varchar(10) NULL, 
	 PTA_EFC_QTY varchar(10) NULL, 
	 PTA_MLK_REL_PCT varchar(10) NULL, 
	 PTA_FAT_REL_PCT varchar(10) NULL, 
	 PTA_PRO_REL_PCT varchar(10) NULL, 
	 PTA_PL_REL_PCT varchar(10) NULL, 
	 PTA_SCS_REL_PCT varchar(10) NULL, 
	 PTA_DPR_REL_PCT varchar(10) NULL, 
	 PTA_HCR_REL_PCT varchar(10) NULL, 
	 PTA_CCR_REL_PCT varchar(10) NULL, 
	 PTA_LIV_REL_PCT varchar(10) NULL, 
	 PTA_GL_REL_PCT varchar(10) NULL, 
	 PTA_MFV_REL_PCT varchar(10) NULL, 
	 PTA_DAB_REL_PCT varchar(10) NULL, 
	 PTA_KET_REL_PCT varchar(10) NULL, 
	 PTA_MAS_REL_PCT varchar(10) NULL, 
	 PTA_MET_REL_PCT varchar(10) NULL, 
	 PTA_RPL_REL_PCT varchar(10) NULL, 
	 PTA_EFC_REL_PCT varchar(10) NULL, 
	 PTA_FAT_PCT varchar(10) NULL, 
	 PTA_PRO_PCT varchar(10) NULL, 
  
constraint BULL_EVL_TABLE_DECODE_PK               primary key (EVAL_BREED_CODE, BULL_ID, EVAL_PDATE, SOURCE_CODE));

--in EVALUATION;

create index BULL_EVL_TABLE_DECODE_INDEX           on BULL_EVL_TABLE_DECODE   (ANIM_KEY   asc)  allow reverse scans;
create index BULL_EVL_TABLE_DECODE_INDEX2          on BULL_EVL_TABLE_DECODE           (EVAL_PDATE desc, EVAL_BREED_CODE asc, ANIM_KEY desc) allow reverse scans;
create index BULL_EVL_TABLE_DECODE_INDEX_STATUS_CODE           on BULL_EVL_TABLE_DECODE   (STATUS_CODE   asc)  allow reverse scans;
 create index BULL_EVL_TABLE_DECODE_INDEX_BIRTH_PDATE           on BULL_EVL_TABLE_DECODE   (BIRTH_PDATE   asc)  allow reverse scans;
 
INSERT INTO BULL_EVL_TABLE_DECODE
(
EVAL_BREED_CODE
,BULL_ID
,EVAL_PDATE
,SOURCE_CODE
,ANIM_KEY
,STATUS_CODE
,NAAB_CODE
,MOST_DAU_HERD_QTY
,NM_AMT
,NM_REL_PCT
,NM_PCTL
,PTA_MLK_QTY
,PTA_MLK_REL_PCT
,PTA_FAT_QTY
,PTA_FAT_REL_PCT
,PTA_PRO_QTY
,PTA_PRO_REL_PCT
,PTA_PL_QTY
,PTA_PL_REL_PCT
,PTA_SCS_QTY
,PTA_SCS_REL_PCT
,PTA_DPR_QTY
,PTA_DPR_REL_PCT
,PTA_HCR_QTY
,PTA_HCR_REL_PCT
,PTA_CCR_QTY
,PTA_CCR_REL_PCT
,PTA_LIV_QTY
,PTA_LIV_REL_PCT
,PTA_GL_QTY
,PTA_GL_REL_PCT
,PTA_MFV_QTY
,PTA_MFV_REL_PCT
,PTA_DAB_QTY
,PTA_DAB_REL_PCT
,PTA_KET_QTY
,PTA_KET_REL_PCT
,PTA_MAS_QTY
,PTA_MAS_REL_PCT
,PTA_MET_QTY
,PTA_MET_REL_PCT
,PTA_RPL_QTY
,PTA_RPL_REL_PCT
,PTA_EFC_QTY
,PTA_EFC_REL_PCT
,PTA_FAT_PCT
,PTA_PRO_PCT
)
SELECT 
EVAL_BREED_CODE
,BULL_ID
,EVAL_PDATE
,SOURCE_CODE
,ANIM_KEY
,STATUS_CODE
,CASE WHEN length(bv.NAAB10_SEG) >=10 THEN SUBSTRING(bv.NAAB10_SEG,1,10)
		              ELSE NULL 
  END  AS NAAB_CODE
,MOST_DAU_HERD_QTY
,cast(CASE WHEN bv.INDEX_CNT>= 1 THEN str2int(SUBSTRING(bv.INDEX_AMT_SEG,1,2))
       ELSE NULL
    END as varchar(10)) as NM_AMT 
,cast(NM_REL_PCT as varchar(5)) as NM_REL_PCT
,cast(NM_PCTL as varchar(5)) as NM_PCTL
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 1 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,1,2)) ELSE NULL END *1,1) AS  MLK_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 1 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,1,2)) ELSE NULL END*0.1,1)  AS  MLK_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 2 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,3,2)) ELSE NULL END *1,1) AS  FAT_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 2 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,3,2)) ELSE NULL END*0.1,1)  AS  FAT_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 3 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,5,2)) ELSE NULL END *1,1) AS  PRO_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 3 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,5,2)) ELSE NULL END*0.1,1)  AS  PRO_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 4 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,7,2)) ELSE NULL END *0.1,0.1) AS  PL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 4 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,7,2)) ELSE NULL END*0.1,1)  AS  PL_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 5 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,9,2)) ELSE NULL END *0.01,0.01) AS  SCS_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 5 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,9,2)) ELSE NULL END*0.1,1)  AS  SCS_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 9 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,17,2)) ELSE NULL END *0.1,0.1) AS  DPR_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 9 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,17,2)) ELSE NULL END*0.1,1)  AS  DPR_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 11 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,21,2)) ELSE NULL END *0.1,0.1) AS  HCR_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 11 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,21,2)) ELSE NULL END*0.1,1)  AS  HCR_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 12 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,23,2)) ELSE NULL END *0.1,0.1) AS  CCR_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 12 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,23,2)) ELSE NULL END*0.1,1)  AS  CCR_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 13 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,25,2)) ELSE NULL END *0.1,0.1) AS  LIV_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 13 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,25,2)) ELSE NULL END*0.1,1)  AS  LIV_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 14 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,27,2)) ELSE NULL END *0.1,0.1) AS  GL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 14 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,27,2)) ELSE NULL END*0.1,1)  AS  GL_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 17 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,33,2)) ELSE NULL END *0.1,0.1) AS  MFV_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 17 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,33,2)) ELSE NULL END*0.1,1)  AS  MFV_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 18 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,35,2)) ELSE NULL END *0.1,0.1) AS  DAB_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 18 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,35,2)) ELSE NULL END*0.1,1)  AS  DAB_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 19 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,37,2)) ELSE NULL END *0.1,0.1) AS  KET_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 19 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,37,2)) ELSE NULL END*0.1,1)  AS  KET_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 20 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,39,2)) ELSE NULL END *0.1,0.1) AS  MAS_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 20 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,39,2)) ELSE NULL END*0.1,1)  AS  MAS_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 21 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,41,2)) ELSE NULL END *0.1,0.1) AS  MET_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 21 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,41,2)) ELSE NULL END*0.1,1)  AS  MET_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 22 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,43,2)) ELSE NULL END *0.1,0.1) AS  RPL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 22 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,43,2)) ELSE NULL END*0.1,1)  AS  RPL_REL_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT>= 23 THEN str2int(SUBSTRING(bv.TRAIT_PTA_QTY_SEG,45,2)) ELSE NULL END *0.1,0.1) AS  EFC_PTA
,FLOAT2CHAR(CASE WHEN bv.TRAIT_CNT >= 23 THEN str2int(SUBSTRING(bv.TRAIT_PTA_REL_PCT_SEG,45,2)) ELSE NULL END*0.1,1)  AS  EFC_REL_PTA
,FLOAT2CHAR(PTA_FAT_PCT*0.01,0.01) as FLOAT2CHAR
,FLOAT2CHAR(PTA_PRO_PCT*0.01,0.01)  as PTA_PRO_PCT
FROM BULL_EVL_TABLE bv
where eval_pdate in (21884,21762,21640)
and official_ind ='Y';


ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN CM_AMT varchar(10) null;
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN FM_AMT varchar(10) null;
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN GM_AMT varchar(10) null;
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN PA_NM_AMT varchar(10) null; 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN PA_NM_REL_PCT varchar(10) null; 
 

MERGE INTO BULL_EVL_TABLE_DECODE AS A
USING (
SELECT ANIM_KEY
,eval_pdate
,cast(case when bv.INDEX_CNT>= 3 then str2int(substring(bv.INDEX_AMT_SEG,3,2))
       else null
    end as varchar(10)) as PA_NM_AMT 
,cast(case when bv.INDEX_CNT>= 3 then str2int(substring(bv.INDEX_AMT_SEG,5,2))
       else null
    end as varchar(10)) as FM_AMT 
 ,cast(case when bv.INDEX_CNT>= 4 then str2int(substring(bv.INDEX_AMT_SEG,7,2))
       else null
    end as varchar(10)) as CM_AMT 
 ,cast(case when bv.INDEX_CNT>=5  then str2int(substring(bv.INDEX_AMT_SEG,9,2))
       else null
    end as varchar(10)) as GM_AMT 
,PA_NM_REL_PCT
FROM  BULL_EVL_TABLE bv
where eval_pdate in (21884,21762,21640)
and official_ind ='Y') AS B
ON A.ANIM_KEY =B.ANIM_KEY
and A.eval_pdate =B.eval_pdate
WHEN MATCHED THEN UPDATE 
SET CM_AMT = B.CM_AMT,
	FM_AMT = B.FM_AMT,
	GM_AMT = B.GM_AMT,
	PA_NM_AMT = B.PA_NM_AMT,
	PA_NM_REL_PCT = B.PA_NM_REL_PCT 

;
 
 -- add MF_LACT_DAU_QTY
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN MF_LACT_DAU_QTY smallint;
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN YLD_REL_PCT smallint;
 
MERGE INTO BULL_EVL_TABLE_DECODE AS A
USING (
SELECT ANIM_KEY
,eval_pdate
,MF_LACT_DAU_QTY
,YLD_REL_PCT

FROM  BULL_EVL_TABLE bv
where eval_pdate in (21884,21762,21640)
and official_ind ='Y') AS B
ON A.ANIM_KEY =B.ANIM_KEY
and A.eval_pdate =B.eval_pdate
WHEN MATCHED THEN UPDATE 
SET MF_LACT_DAU_QTY = B.MF_LACT_DAU_QTY,
YLD_REL_PCT = B.YLD_REL_PCT 
;

-- add MLK_DAUS_QTY, MLK_HERDS_QTY
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN MLK_DAUS_QTY int;
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN MLK_HERDS_QTY int;
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN GENOMICS_IND char(1); 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN BIRTH_PDATE smallint; 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN INBRD_PCT smallint; 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN GENOMICS_INBRD_PCT smallint; 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN FUTURE_GENOMICS_INBRD_PCT smallint; 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN ENTER_AI_PDATE smallint; 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN MLK_HIGH_EVAL_NUM smallint; 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN FUTURE_DAU_INBRD_PCT smallint; 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN DAU_INBRD_PCT smallint; 

MERGE INTO BULL_EVL_TABLE_DECODE AS A
USING
(
	SELECT ANIM_KEY
	,eval_pdate
	,str2int(substring(TRAIT_DAU_QTY_SEG,1,4)) AS MLK_DAUS_QTY
	,str2int(substring(TRAIT_HERDS_QTY_SEG,1,4)) AS MLK_HERDS_QTY
	,GENOMICS_IND
	,INBRD_PCT
	,GENOMICS_INBRD_PCT
	,FUTURE_GENOMICS_INBRD_PCT
	,ENTER_AI_PDATE
	,MLK_HIGH_EVAL_NUM
	,BIRTH_PDATE
	,FUTURE_DAU_INBRD_PCT
	,DAU_INBRD_PCT
	FROM  BULL_EVL_TABLE bv
	where eval_pdate in (21884,21762,21640)
	and official_ind ='Y'
) AS B
ON A.ANIM_KEY =B.ANIM_KEY
and A.eval_pdate =B.eval_pdate
WHEN MATCHED THEN UPDATE 
SET MLK_DAUS_QTY = B.MLK_DAUS_QTY,
MLK_HERDS_QTY = B.MLK_HERDS_QTY ,
GENOMICS_IND = B.GENOMICS_IND,
BIRTH_PDATE =  B.BIRTH_PDATE,
INBRD_PCT = B.INBRD_PCT,
GENOMICS_INBRD_PCT = B.GENOMICS_INBRD_PCT ,
FUTURE_GENOMICS_INBRD_PCT = B.FUTURE_GENOMICS_INBRD_PCT,
ENTER_AI_PDATE = B.ENTER_AI_PDATE,
MLK_HIGH_EVAL_NUM = B.MLK_HIGH_EVAL_NUM,
FUTURE_DAU_INBRD_PCT = B.FUTURE_DAU_INBRD_PCT,
DAU_INBRD_PCT = B.DAU_INBRD_PCT  
;

-- Add DAUS, HERDS, SRC, PA and PAREL for traits.
ALTER TABLE BULL_EVL_TABLE_DECODE
ADD COLUMN FAT_DAUS_QTY INT
ADD COLUMN PRO_DAUS_QTY INT
ADD COLUMN PL_DAUS_QTY INT
ADD COLUMN SCS_DAUS_QTY INT
ADD COLUMN DPR_DAUS_QTY INT
ADD COLUMN HCR_DAUS_QTY INT
ADD COLUMN CCR_DAUS_QTY INT
ADD COLUMN LIV_DAUS_QTY INT
ADD COLUMN GL_DAUS_QTY INT
ADD COLUMN MFV_DAUS_QTY INT
ADD COLUMN DAB_DAUS_QTY INT
ADD COLUMN KET_DAUS_QTY INT
ADD COLUMN MAS_DAUS_QTY INT
ADD COLUMN MET_DAUS_QTY INT
ADD COLUMN RPL_DAUS_QTY INT
ADD COLUMN EFC_DAUS_QTY INT

ADD COLUMN FAT_HERDS_QTY INT
ADD COLUMN PRO_HERDS_QTY INT
ADD COLUMN PL_HERDS_QTY INT
ADD COLUMN SCS_HERDS_QTY INT
ADD COLUMN DPR_HERDS_QTY INT
ADD COLUMN HCR_HERDS_QTY INT
ADD COLUMN CCR_HERDS_QTY INT
ADD COLUMN LIV_HERDS_QTY INT
ADD COLUMN GL_HERDS_QTY INT
ADD COLUMN MFV_HERDS_QTY INT
ADD COLUMN DAB_HERDS_QTY INT
ADD COLUMN KET_HERDS_QTY INT
ADD COLUMN MAS_HERDS_QTY INT
ADD COLUMN MET_HERDS_QTY INT
ADD COLUMN RPL_HERDS_QTY INT
ADD COLUMN EFC_HERDS_QTY INT

ADD COLUMN SRC_MLK CHAR(1) NULL
ADD COLUMN SRC_FAT CHAR(1) NULL
ADD COLUMN SRC_PRO CHAR(1) NULL
ADD COLUMN SRC_PL CHAR(1) NULL
ADD COLUMN SRC_SCS CHAR(1) NULL
ADD COLUMN SRC_DPR CHAR(1) NULL
ADD COLUMN SRC_HCR CHAR(1) NULL
ADD COLUMN SRC_CCR CHAR(1) NULL
ADD COLUMN SRC_LIV CHAR(1) NULL
ADD COLUMN SRC_GL CHAR(1) NULL
ADD COLUMN SRC_MFV CHAR(1) NULL
ADD COLUMN SRC_DAB CHAR(1) NULL
ADD COLUMN SRC_KET CHAR(1) NULL
ADD COLUMN SRC_MAS CHAR(1) NULL
ADD COLUMN SRC_MET CHAR(1) NULL
ADD COLUMN SRC_RPL CHAR(1) NULL
ADD COLUMN SRC_EFC CHAR(1) NULL

ADD COLUMN PA_MLK_QTY VARCHAR(10) NULL
ADD COLUMN PA_FAT_QTY VARCHAR(10) NULL
ADD COLUMN PA_PRO_QTY VARCHAR(10) NULL
ADD COLUMN PA_PL_QTY VARCHAR(10) NULL
ADD COLUMN PA_SCS_QTY VARCHAR(10) NULL
ADD COLUMN PA_DPR_QTY VARCHAR(10) NULL
ADD COLUMN PA_HCR_QTY VARCHAR(10) NULL
ADD COLUMN PA_CCR_QTY VARCHAR(10) NULL
ADD COLUMN PA_LIV_QTY VARCHAR(10) NULL
ADD COLUMN PA_GL_QTY VARCHAR(10) NULL
ADD COLUMN PA_MFV_QTY VARCHAR(10) NULL
ADD COLUMN PA_DAB_QTY VARCHAR(10) NULL
ADD COLUMN PA_KET_QTY VARCHAR(10) NULL
ADD COLUMN PA_MAS_QTY VARCHAR(10) NULL
ADD COLUMN PA_MET_QTY VARCHAR(10) NULL
ADD COLUMN PA_RPL_QTY VARCHAR(10) NULL
ADD COLUMN PA_EFC_QTY VARCHAR(10) NULL

ADD COLUMN PA_MLK_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_FAT_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_PRO_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_PL_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_SCS_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_DPR_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_HCR_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_CCR_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_LIV_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_GL_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_MFV_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_DAB_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_KET_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_MAS_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_MET_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_RPL_REL_PCT VARCHAR(10) NULL
ADD COLUMN PA_EFC_REL_PCT VARCHAR(10) NULL
;

DECLARE GLOBAL TEMPORARY TABLE SESSION.TMP_TRAIT_CONFIG
(
	MLK_TRAIT_NUM_1	SMALLINT,
	FAT_TRAIT_NUM_1 SMALLINT,
	PRO_TRAIT_NUM_1 SMALLINT,
	PL_TRAIT_NUM_1 SMALLINT,
	SCS_TRAIT_NUM_1 SMALLINT,
	DPR_TRAIT_NUM_1 SMALLINT,
	HCR_TRAIT_NUM_1 SMALLINT,
	CCR_TRAIT_NUM_1 SMALLINT,
	LIV_TRAIT_NUM_1 SMALLINT,
	GL_TRAIT_NUM_1 SMALLINT,
	MFV_TRAIT_NUM_1 SMALLINT,
	DAB_TRAIT_NUM_1 SMALLINT,
	KET_TRAIT_NUM_1 SMALLINT,
	MAS_TRAIT_NUM_1 SMALLINT,
	MET_TRAIT_NUM_1 SMALLINT,
	RPL_TRAIT_NUM_1 SMALLINT,
	EFC_TRAIT_NUM_1 SMALLINT,
	
	MLK_TRAIT_NUM_2	SMALLINT,
	FAT_TRAIT_NUM_2	SMALLINT,
	PRO_TRAIT_NUM_2	SMALLINT,
	PL_TRAIT_NUM_2	SMALLINT,
	SCS_TRAIT_NUM_2	SMALLINT,
	DPR_TRAIT_NUM_2	SMALLINT,
	HCR_TRAIT_NUM_2	SMALLINT,
	CCR_TRAIT_NUM_2	SMALLINT,
	LIV_TRAIT_NUM_2	SMALLINT,
	GL_TRAIT_NUM_2	SMALLINT,
	MFV_TRAIT_NUM_2	SMALLINT,
	DAB_TRAIT_NUM_2	SMALLINT,
	KET_TRAIT_NUM_2	SMALLINT,
	MAS_TRAIT_NUM_2	SMALLINT,
	MET_TRAIT_NUM_2	SMALLINT,
	RPL_TRAIT_NUM_2	SMALLINT,
	EFC_TRAIT_NUM_2	SMALLINT,
	
	MLK_TRAIT_NUM_4	SMALLINT,
	FAT_TRAIT_NUM_4	SMALLINT,
	PRO_TRAIT_NUM_4	SMALLINT,
	PL_TRAIT_NUM_4	SMALLINT,
	SCS_TRAIT_NUM_4	SMALLINT,
	DPR_TRAIT_NUM_4	SMALLINT,
	HCR_TRAIT_NUM_4	SMALLINT,
	CCR_TRAIT_NUM_4	SMALLINT,
	LIV_TRAIT_NUM_4	SMALLINT,
	GL_TRAIT_NUM_4	SMALLINT,
	MFV_TRAIT_NUM_4	SMALLINT,
	DAB_TRAIT_NUM_4	SMALLINT,
	KET_TRAIT_NUM_4	SMALLINT,
	MAS_TRAIT_NUM_4	SMALLINT,
	MET_TRAIT_NUM_4	SMALLINT,
	RPL_TRAIT_NUM_4	SMALLINT,
	EFC_TRAIT_NUM_4	SMALLINT,
	
	MLK_DECIMAL_ADJUST_CODE	VARCHAR(5),
	FAT_DECIMAL_ADJUST_CODE	VARCHAR(5),
	PRO_DECIMAL_ADJUST_CODE	VARCHAR(5),
	PL_DECIMAL_ADJUST_CODE	VARCHAR(5),
	SCS_DECIMAL_ADJUST_CODE	VARCHAR(5),
	DPR_DECIMAL_ADJUST_CODE	VARCHAR(5),
	HCR_DECIMAL_ADJUST_CODE	VARCHAR(5),
	CCR_DECIMAL_ADJUST_CODE	VARCHAR(5),
	LIV_DECIMAL_ADJUST_CODE	VARCHAR(5),
	GL_DECIMAL_ADJUST_CODE	VARCHAR(5),
	MFV_DECIMAL_ADJUST_CODE	VARCHAR(5),
	DAB_DECIMAL_ADJUST_CODE	VARCHAR(5),
	KET_DECIMAL_ADJUST_CODE	VARCHAR(5),
	MAS_DECIMAL_ADJUST_CODE	VARCHAR(5),
	MET_DECIMAL_ADJUST_CODE	VARCHAR(5),
	RPL_DECIMAL_ADJUST_CODE	VARCHAR(5),
	EFC_DECIMAL_ADJUST_CODE	VARCHAR(5)
) WITH REPLACE ON COMMIT PRESERVE ROWS;

INSERT INTO SESSION.TMP_TRAIT_CONFIG
(
	MLK_TRAIT_NUM_1,
	FAT_TRAIT_NUM_1,
	PRO_TRAIT_NUM_1,
	PL_TRAIT_NUM_1,
	SCS_TRAIT_NUM_1,
	DPR_TRAIT_NUM_1,
	HCR_TRAIT_NUM_1,
	CCR_TRAIT_NUM_1,
	LIV_TRAIT_NUM_1,
	GL_TRAIT_NUM_1,
	MFV_TRAIT_NUM_1,
	DAB_TRAIT_NUM_1,
	KET_TRAIT_NUM_1,
	MAS_TRAIT_NUM_1,
	MET_TRAIT_NUM_1,
	RPL_TRAIT_NUM_1,
	EFC_TRAIT_NUM_1,
	
	MLK_TRAIT_NUM_2,
	FAT_TRAIT_NUM_2,
	PRO_TRAIT_NUM_2,
	PL_TRAIT_NUM_2,
	SCS_TRAIT_NUM_2,
	DPR_TRAIT_NUM_2,
	HCR_TRAIT_NUM_2,
	CCR_TRAIT_NUM_2,
	LIV_TRAIT_NUM_2,
	GL_TRAIT_NUM_2,
	MFV_TRAIT_NUM_2,
	DAB_TRAIT_NUM_2,
	KET_TRAIT_NUM_2,
	MAS_TRAIT_NUM_2,
	MET_TRAIT_NUM_2,
	RPL_TRAIT_NUM_2,
	EFC_TRAIT_NUM_2,
	
	MLK_TRAIT_NUM_4,
	FAT_TRAIT_NUM_4,
	PRO_TRAIT_NUM_4,
	PL_TRAIT_NUM_4,
	SCS_TRAIT_NUM_4,
	DPR_TRAIT_NUM_4,
	HCR_TRAIT_NUM_4,
	CCR_TRAIT_NUM_4,
	LIV_TRAIT_NUM_4,
	GL_TRAIT_NUM_4,
	MFV_TRAIT_NUM_4,
	DAB_TRAIT_NUM_4,
	KET_TRAIT_NUM_4,
	MAS_TRAIT_NUM_4,
	MET_TRAIT_NUM_4,
	RPL_TRAIT_NUM_4,
	EFC_TRAIT_NUM_4,
	
	MLK_DECIMAL_ADJUST_CODE,
	FAT_DECIMAL_ADJUST_CODE,
	PRO_DECIMAL_ADJUST_CODE,
	PL_DECIMAL_ADJUST_CODE,
	SCS_DECIMAL_ADJUST_CODE,
	DPR_DECIMAL_ADJUST_CODE,
	HCR_DECIMAL_ADJUST_CODE,
	CCR_DECIMAL_ADJUST_CODE,
	LIV_DECIMAL_ADJUST_CODE,
	GL_DECIMAL_ADJUST_CODE,
	MFV_DECIMAL_ADJUST_CODE,
	DAB_DECIMAL_ADJUST_CODE,
	KET_DECIMAL_ADJUST_CODE,
	MAS_DECIMAL_ADJUST_CODE,
	MET_DECIMAL_ADJUST_CODE,
	RPL_DECIMAL_ADJUST_CODE,
	EFC_DECIMAL_ADJUST_CODE
)
SELECT	MAX(CASE WHEN TRAIT_SHORT_NAME = 'Mlk' THEN TRAIT_NUM_1  ELSE NULL END) AS MLK_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'Fat' THEN TRAIT_NUM_1  ELSE NULL END) AS FAT_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'Pro' THEN TRAIT_NUM_1  ELSE NULL END) AS PRO_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'PL' THEN TRAIT_NUM_1  ELSE NULL END) AS PL_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'SCS' THEN TRAIT_NUM_1  ELSE NULL END) AS SCS_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'DPR' THEN TRAIT_NUM_1  ELSE NULL END) AS DPR_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'HCR' THEN TRAIT_NUM_1  ELSE NULL END) AS HCR_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'CCR' THEN TRAIT_NUM_1  ELSE NULL END) AS CCR_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'LIV' THEN TRAIT_NUM_1  ELSE NULL END) AS LIV_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'GL' THEN TRAIT_NUM_1  ELSE NULL END) AS GL_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'MFV' THEN TRAIT_NUM_1  ELSE NULL END) AS MFV_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'DAB' THEN TRAIT_NUM_1  ELSE NULL END) AS DAB_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'KET' THEN TRAIT_NUM_1  ELSE NULL END) AS KET_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'MAS' THEN TRAIT_NUM_1  ELSE NULL END) AS MAS_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'MET' THEN TRAIT_NUM_1  ELSE NULL END) AS MET_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'RPL' THEN TRAIT_NUM_1  ELSE NULL END) AS RPL_TRAIT_NUM_1,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'EFC' THEN TRAIT_NUM_1  ELSE NULL END) AS EFC_TRAIT_NUM_1,		

		MAX(CASE WHEN TRAIT_SHORT_NAME = 'Mlk' THEN TRAIT_NUM_2  ELSE NULL END) AS MLK_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'Fat' THEN TRAIT_NUM_2  ELSE NULL END) AS FAT_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'Pro' THEN TRAIT_NUM_2  ELSE NULL END) AS PRO_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'PL' THEN TRAIT_NUM_2  ELSE NULL END) AS PL_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'SCS' THEN TRAIT_NUM_2  ELSE NULL END) AS SCS_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'DPR' THEN TRAIT_NUM_2  ELSE NULL END) AS DPR_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'HCR' THEN TRAIT_NUM_2  ELSE NULL END) AS HCR_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'CCR' THEN TRAIT_NUM_2  ELSE NULL END) AS CCR_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'LIV' THEN TRAIT_NUM_2  ELSE NULL END) AS LIV_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'GL' THEN TRAIT_NUM_2  ELSE NULL END) AS GL_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'MFV' THEN TRAIT_NUM_2  ELSE NULL END) AS MFV_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'DAB' THEN TRAIT_NUM_2  ELSE NULL END) AS DAB_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'KET' THEN TRAIT_NUM_2  ELSE NULL END) AS KET_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'MAS' THEN TRAIT_NUM_2  ELSE NULL END) AS MAS_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'MET' THEN TRAIT_NUM_2  ELSE NULL END) AS MET_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'RPL' THEN TRAIT_NUM_2  ELSE NULL END) AS RPL_TRAIT_NUM_2,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'EFC' THEN TRAIT_NUM_2  ELSE NULL END) AS EFC_TRAIT_NUM_2,
		
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'Mlk' THEN TRAIT_NUM_4  ELSE NULL END) AS MLK_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'Fat' THEN TRAIT_NUM_4  ELSE NULL END) AS FAT_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'Pro' THEN TRAIT_NUM_4  ELSE NULL END) AS PRO_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'PL' THEN TRAIT_NUM_4  ELSE NULL END) AS PL_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'SCS' THEN TRAIT_NUM_4  ELSE NULL END) AS SCS_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'DPR' THEN TRAIT_NUM_4  ELSE NULL END) AS DPR_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'HCR' THEN TRAIT_NUM_4  ELSE NULL END) AS HCR_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'CCR' THEN TRAIT_NUM_4  ELSE NULL END) AS CCR_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'LIV' THEN TRAIT_NUM_4  ELSE NULL END) AS LIV_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'GL' THEN TRAIT_NUM_4  ELSE NULL END) AS GL_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'MFV' THEN TRAIT_NUM_4  ELSE NULL END) AS MFV_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'DAB' THEN TRAIT_NUM_4  ELSE NULL END) AS DAB_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'KET' THEN TRAIT_NUM_4  ELSE NULL END) AS KET_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'MAS' THEN TRAIT_NUM_4  ELSE NULL END) AS MAS_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'MET' THEN TRAIT_NUM_4  ELSE NULL END) AS MET_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'RPL' THEN TRAIT_NUM_4  ELSE NULL END) AS RPL_TRAIT_NUM_4,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'EFC' THEN TRAIT_NUM_4  ELSE NULL END) AS EFC_TRAIT_NUM_4,
		
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'Mlk' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS MLK_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'Fat' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS FAT_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'Pro' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS PRO_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'PL' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS PL_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'SCS' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS SCS_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'DPR' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS DPR_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'HCR' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS HCR_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'CCR' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS CCR_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'LIV' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS LIV_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'GL' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS GL_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'MFV' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS MFV_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'DAB' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS DAB_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'KET' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS KET_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'MAS' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS MAS_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'MET' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS MET_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'RPL' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS RPL_DECIMAL_ADJUST_CODE,
		MAX(CASE WHEN TRAIT_SHORT_NAME = 'EFC' THEN DECIMAL_ADJUST_CODE  ELSE NULL END) AS EFC_DECIMAL_ADJUST_CODE
FROM
(
	SELECT	TRAIT_SHORT_NAME,
			((TRAIT_NUM-1)*1)+1 AS TRAIT_NUM_1,
			((TRAIT_NUM-1)*2)+1 AS TRAIT_NUM_2,
			((TRAIT_NUM-1)*4)+1 AS TRAIT_NUM_4,
			CASE WHEN  DECIMAL_ADJUST_CODE = '0' THEN '1'
			 	 WHEN  DECIMAL_ADJUST_CODE = '1' THEN '0.1' 
			 	 WHEN  DECIMAL_ADJUST_CODE = '2' THEN '0.01'
			ELSE '1'
		END AS DECIMAL_ADJUST_CODE
	FROM TRAIT_TABLE
	WHERE TRAIT_SHORT_NAME IN ('Mlk', 'Fat', 'Pro', 'PL', 'SCS', 'DPR', 'HCR', 'CCR', 'LIV', 'GL', 'MFV', 'DAB', 'KET', 'MAS', 'MET', 'RPL', 'EFC')
);

MERGE INTO BULL_EVL_TABLE_DECODE AS A
USING
(
	SELECT	ANIM_KEY,
			EVAL_PDATE,
			EVAL_BREED_CODE,
			BULL_ID,
			SOURCE_CODE,
			
			-- DAUS
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.FAT_TRAIT_NUM_4, 4), '')) AS FAT_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.PRO_TRAIT_NUM_4, 4), '')) AS PRO_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.PL_TRAIT_NUM_4, 4), '')) AS PL_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.SCS_TRAIT_NUM_4, 4), '')) AS SCS_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.DPR_TRAIT_NUM_4, 4), '')) AS DPR_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.HCR_TRAIT_NUM_4, 4), '')) AS HCR_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.CCR_TRAIT_NUM_4, 4), '')) AS CCR_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.LIV_TRAIT_NUM_4, 4), '')) AS LIV_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.GL_TRAIT_NUM_4, 4), '')) AS GL_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.MFV_TRAIT_NUM_4, 4), '')) AS MFV_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.DAB_TRAIT_NUM_4, 4), '')) AS DAB_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.KET_TRAIT_NUM_4, 4), '')) AS KET_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.MAS_TRAIT_NUM_4, 4), '')) AS MAS_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.MET_TRAIT_NUM_4, 4), '')) AS MET_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.RPL_TRAIT_NUM_4, 4), '')) AS RPL_DAUS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_DAU_QTY_SEG, tr.EFC_TRAIT_NUM_4, 4), '')) AS EFC_DAUS_QTY,
			
			-- HERDS
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.FAT_TRAIT_NUM_4, 4), '')) AS FAT_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.PRO_TRAIT_NUM_4, 4), '')) AS PRO_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.PL_TRAIT_NUM_4, 4), '')) AS PL_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.SCS_TRAIT_NUM_4, 4), '')) AS SCS_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.DPR_TRAIT_NUM_4, 4), '')) AS DPR_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.HCR_TRAIT_NUM_4, 4), '')) AS HCR_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.CCR_TRAIT_NUM_4, 4), '')) AS CCR_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.LIV_TRAIT_NUM_4, 4), '')) AS LIV_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.GL_TRAIT_NUM_4, 4), '')) AS GL_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.MFV_TRAIT_NUM_4, 4), '')) AS MFV_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.DAB_TRAIT_NUM_4, 4), '')) AS DAB_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.KET_TRAIT_NUM_4, 4), '')) AS KET_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.MAS_TRAIT_NUM_4, 4), '')) AS MAS_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.MET_TRAIT_NUM_4, 4), '')) AS MET_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.RPL_TRAIT_NUM_4, 4), '')) AS RPL_HERDS_QTY,
			STR2INT(NULLIF(SUBSTRING(TRAIT_HERDS_QTY_SEG, tr.EFC_TRAIT_NUM_4, 4), '')) AS EFC_HERDS_QTY,
			
			-- SOURCE
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, MLK_TRAIT_NUM_1, 1), '') BETWEEN '1' AND '8') THEN 'M'
				 ELSE ''
			END AS SRC_MLK,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, FAT_TRAIT_NUM_1, 1), '') BETWEEN '1' AND '8') THEN 'M'
				 ELSE ''
			END AS SRC_FAT,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, PRO_TRAIT_NUM_1, 1), '') BETWEEN '1' AND '8') THEN 'M'
				 ELSE ''
			END AS SRC_PRO,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, PL_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_PL,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, SCS_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_SCS,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, DPR_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_DPR,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, HCR_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_HCR,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, CCR_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_CCR,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, LIV_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_LIV,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, GL_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_GL,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, MFV_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_MFV,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, DAB_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_DAB,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, KET_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_KET,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, MAS_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_MAS,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, MET_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_MET,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, RPL_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_RPL,
			CASE WHEN (NULLIF(SUBSTRING(be.TRAIT_USABILITY_CODE_SEG, EFC_TRAIT_NUM_1, 1), '') = '2') THEN 'M'
				 ELSE ''
			END AS SRC_EFC,
			
			-- PA
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.MLK_TRAIT_NUM_2, 2), ''))*tr.MLK_DECIMAL_ADJUST_CODE, tr.MLK_DECIMAL_ADJUST_CODE)	AS PA_MLK_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.FAT_TRAIT_NUM_2, 2), ''))*tr.FAT_DECIMAL_ADJUST_CODE, tr.FAT_DECIMAL_ADJUST_CODE)	AS PA_FAT_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.PRO_TRAIT_NUM_2, 2), ''))*tr.PRO_DECIMAL_ADJUST_CODE, tr.PRO_DECIMAL_ADJUST_CODE)	AS PA_PRO_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.PL_TRAIT_NUM_2, 2), ''))*tr.PL_DECIMAL_ADJUST_CODE, tr.PL_DECIMAL_ADJUST_CODE)		AS PA_PL_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.SCS_TRAIT_NUM_2, 2), ''))*tr.SCS_DECIMAL_ADJUST_CODE, tr.SCS_DECIMAL_ADJUST_CODE)	AS PA_SCS_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.DPR_TRAIT_NUM_2, 2), ''))*tr.DPR_DECIMAL_ADJUST_CODE, tr.DPR_DECIMAL_ADJUST_CODE)	AS PA_DPR_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.HCR_TRAIT_NUM_2, 2), ''))*tr.HCR_DECIMAL_ADJUST_CODE, tr.HCR_DECIMAL_ADJUST_CODE)	AS PA_HCR_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.CCR_TRAIT_NUM_2, 2), ''))*tr.CCR_DECIMAL_ADJUST_CODE, tr.CCR_DECIMAL_ADJUST_CODE)	AS PA_CCR_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.LIV_TRAIT_NUM_2, 2), ''))*tr.LIV_DECIMAL_ADJUST_CODE, tr.LIV_DECIMAL_ADJUST_CODE)	AS PA_LIV_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.GL_TRAIT_NUM_2, 2), ''))*tr.GL_DECIMAL_ADJUST_CODE, tr.GL_DECIMAL_ADJUST_CODE)		AS PA_GL_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.MFV_TRAIT_NUM_2, 2), ''))*tr.MFV_DECIMAL_ADJUST_CODE, tr.MFV_DECIMAL_ADJUST_CODE)	AS PA_MFV_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.DAB_TRAIT_NUM_2, 2), ''))*tr.DAB_DECIMAL_ADJUST_CODE, tr.DAB_DECIMAL_ADJUST_CODE)	AS PA_DAB_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.KET_TRAIT_NUM_2, 2), ''))*tr.KET_DECIMAL_ADJUST_CODE, tr.KET_DECIMAL_ADJUST_CODE)	AS PA_KET_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.MAS_TRAIT_NUM_2, 2), ''))*tr.MAS_DECIMAL_ADJUST_CODE, tr.MAS_DECIMAL_ADJUST_CODE)	AS PA_MAS_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.MET_TRAIT_NUM_2, 2), ''))*tr.MET_DECIMAL_ADJUST_CODE, tr.MET_DECIMAL_ADJUST_CODE)	AS PA_MET_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.RPL_TRAIT_NUM_2, 2), ''))*tr.RPL_DECIMAL_ADJUST_CODE, tr.RPL_DECIMAL_ADJUST_CODE)	AS PA_RPL_QTY,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_QTY_SEG, tr.EFC_TRAIT_NUM_2, 2), ''))*tr.EFC_DECIMAL_ADJUST_CODE, tr.EFC_DECIMAL_ADJUST_CODE)	AS PA_EFC_QTY,
			
			-- RELPA
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.MLK_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_MLK_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.FAT_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_FAT_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.PRO_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_PRO_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.PL_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_PL_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.SCS_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_SCS_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.DPR_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_DPR_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.HCR_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_HCR_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.CCR_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_CCR_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.LIV_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_LIV_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.GL_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_GL_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.MFV_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_MFV_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.DAB_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_DAB_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.KET_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_KET_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.MAS_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_MAS_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.MET_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_MET_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.RPL_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_RPL_REL_PCT,
			FLOAT2CHAR(STR2INT(NULLIF(SUBSTRING(be.TRAIT_PA_REL_PCT_SEG, tr.EFC_TRAIT_NUM_2, 2), ''))*0.1, 1)	AS PA_EFC_REL_PCT
	FROM BULL_EVL_TABLE be
	CROSS JOIN SESSION.TMP_TRAIT_CONFIG tr
	WHERE EVAL_PDATE IN (21884, 21762, 21640)
	AND OFFICIAL_IND = 'Y'
) AS B
ON A.EVAL_PDATE = B.EVAL_PDATE
AND A.EVAL_BREED_CODE = B.EVAL_BREED_CODE
AND A.BULL_ID = B.BULL_ID
AND A.SOURCE_CODE = B.SOURCE_CODE
AND A.ANIM_KEY = B.ANIM_KEY
WHEN MATCHED THEN UPDATE
SET	
	-- DAUS
	A.FAT_DAUS_QTY	=	B.FAT_DAUS_QTY,
	A.PRO_DAUS_QTY	=	B.PRO_DAUS_QTY,
	A.PL_DAUS_QTY	=	B.PL_DAUS_QTY,
	A.SCS_DAUS_QTY	=	B.SCS_DAUS_QTY,
	A.DPR_DAUS_QTY	=	B.DPR_DAUS_QTY,
	A.HCR_DAUS_QTY	=	B.HCR_DAUS_QTY,
	A.CCR_DAUS_QTY	=	B.CCR_DAUS_QTY,
	A.LIV_DAUS_QTY	=	B.LIV_DAUS_QTY,
	A.GL_DAUS_QTY	=	B.GL_DAUS_QTY,
	A.MFV_DAUS_QTY	=	B.MFV_DAUS_QTY,
	A.DAB_DAUS_QTY	=	B.DAB_DAUS_QTY,
	A.KET_DAUS_QTY	=	B.KET_DAUS_QTY,
	A.MAS_DAUS_QTY	=	B.MAS_DAUS_QTY,
	A.MET_DAUS_QTY	=	B.MET_DAUS_QTY,
	A.RPL_DAUS_QTY	=	B.RPL_DAUS_QTY,
	A.EFC_DAUS_QTY	=	B.EFC_DAUS_QTY,
	
	-- HERDS
	A.FAT_HERDS_QTY	=	B.FAT_HERDS_QTY,
	A.PRO_HERDS_QTY	=	B.PRO_HERDS_QTY,
	A.PL_HERDS_QTY	=	B.PL_HERDS_QTY,
	A.SCS_HERDS_QTY	=	B.SCS_HERDS_QTY,
	A.DPR_HERDS_QTY	=	B.DPR_HERDS_QTY,
	A.HCR_HERDS_QTY	=	B.HCR_HERDS_QTY,
	A.CCR_HERDS_QTY	=	B.CCR_HERDS_QTY,
	A.LIV_HERDS_QTY	=	B.LIV_HERDS_QTY,
	A.GL_HERDS_QTY	=	B.GL_HERDS_QTY,
	A.MFV_HERDS_QTY	=	B.MFV_HERDS_QTY,
	A.DAB_HERDS_QTY	=	B.DAB_HERDS_QTY,
	A.KET_HERDS_QTY	=	B.KET_HERDS_QTY,
	A.MAS_HERDS_QTY	=	B.MAS_HERDS_QTY,
	A.MET_HERDS_QTY	=	B.MET_HERDS_QTY,
	A.RPL_HERDS_QTY	=	B.RPL_HERDS_QTY,
	A.EFC_HERDS_QTY	=	B.EFC_HERDS_QTY,
	
	-- SRC
	A.SRC_MLK	=	B.SRC_MLK,
	A.SRC_FAT	=	B.SRC_FAT,
	A.SRC_PRO	=	B.SRC_PRO,
	A.SRC_PL	=	B.SRC_PL,
	A.SRC_SCS	=	B.SRC_SCS,
	A.SRC_DPR	=	B.SRC_DPR,
	A.SRC_HCR	=	B.SRC_HCR,
	A.SRC_CCR	=	B.SRC_CCR,
	A.SRC_LIV	=	B.SRC_LIV,
	A.SRC_GL	=	B.SRC_GL,
	A.SRC_MFV	=	B.SRC_MFV,
	A.SRC_DAB	=	B.SRC_DAB,
	A.SRC_KET	=	B.SRC_KET,
	A.SRC_MAS	=	B.SRC_MAS,
	A.SRC_MET	=	B.SRC_MET,
	A.SRC_RPL	=	B.SRC_RPL,
	A.SRC_EFC	=	B.SRC_EFC,
	
	-- PA
	A.PA_MLK_QTY	=	B.PA_MLK_QTY,
	A.PA_FAT_QTY	=	B.PA_FAT_QTY,
	A.PA_PRO_QTY	=	B.PA_PRO_QTY,
	A.PA_PL_QTY		=	B.PA_PL_QTY,
	A.PA_SCS_QTY	=	B.PA_SCS_QTY,
	A.PA_DPR_QTY	=	B.PA_DPR_QTY,
	A.PA_HCR_QTY	=	B.PA_HCR_QTY,
	A.PA_CCR_QTY	=	B.PA_CCR_QTY,
	A.PA_LIV_QTY	=	B.PA_LIV_QTY,
	A.PA_GL_QTY		=	B.PA_GL_QTY,
	A.PA_MFV_QTY	=	B.PA_MFV_QTY,
	A.PA_DAB_QTY	=	B.PA_DAB_QTY,
	A.PA_KET_QTY	=	B.PA_KET_QTY,
	A.PA_MAS_QTY	=	B.PA_MAS_QTY,
	A.PA_MET_QTY	=	B.PA_MET_QTY,
	A.PA_RPL_QTY	=	B.PA_RPL_QTY,
	A.PA_EFC_QTY	=	B.PA_EFC_QTY,
	
	-- RELPA
	A.PA_MLK_REL_PCT	=	B.PA_MLK_REL_PCT,
	A.PA_FAT_REL_PCT	=	B.PA_FAT_REL_PCT,
	A.PA_PRO_REL_PCT	=	B.PA_PRO_REL_PCT,
	A.PA_PL_REL_PCT		=	B.PA_PL_REL_PCT,
	A.PA_SCS_REL_PCT	=	B.PA_SCS_REL_PCT,
	A.PA_DPR_REL_PCT	=	B.PA_DPR_REL_PCT,
	A.PA_HCR_REL_PCT	=	B.PA_HCR_REL_PCT,
	A.PA_CCR_REL_PCT	=	B.PA_CCR_REL_PCT,
	A.PA_LIV_REL_PCT	=	B.PA_LIV_REL_PCT,
	A.PA_GL_REL_PCT		=	B.PA_GL_REL_PCT,
	A.PA_MFV_REL_PCT	=	B.PA_MFV_REL_PCT,
	A.PA_DAB_REL_PCT	=	B.PA_DAB_REL_PCT,
	A.PA_KET_REL_PCT	=	B.PA_KET_REL_PCT,
	A.PA_MAS_REL_PCT	=	B.PA_MAS_REL_PCT,
	A.PA_MET_REL_PCT	=	B.PA_MET_REL_PCT,
	A.PA_RPL_REL_PCT	=	B.PA_RPL_REL_PCT,
	A.PA_EFC_REL_PCT	=	B.PA_EFC_REL_PCT
	;


-- add common information
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN PED_COMP_PCT smallint; 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN NAAB10_SEG varchar(60); 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN CTRL_STUD_CODE smallint;
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN SAMP_CTRL_CODE smallint;
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN SAMP_STATUS_CODE char(1); 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN SIRE_ID char(17); 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN DAM_ID char(17); 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN INTERNATIONAL_ID_IND char(1); 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN REGIS_STATUS_CODE char(2); 
ALTER TABLE BULL_EVL_TABLE_DECODE ADD COLUMN HERD_WITH_MOST_DAU integer;  

MERGE INTO BULL_EVL_TABLE_DECODE AS A
USING (
	SELECT ANIM_KEY
	,eval_pdate
	,PED_COMP_PCT
	,NAAB10_SEG
	,CTRL_STUD_CODE
	,SAMP_CTRL_CODE
	,SAMP_STATUS_CODE
	,SIRE_ID
	,DAM_ID
	,INTERNATIONAL_ID_IND 
	,REGIS_STATUS_CODE
	,HERD_WITH_MOST_DAU 
	FROM  BULL_EVL_TABLE bv
	where eval_pdate in (21884,21762,21640)
	and official_ind ='Y'
) AS B
ON A.ANIM_KEY =B.ANIM_KEY
and A.eval_pdate =B.eval_pdate

WHEN MATCHED THEN UPDATE 
SET PED_COMP_PCT = B.PED_COMP_PCT  
,NAAB10_SEG = B.NAAB10_SEG 
,CTRL_STUD_CODE = B.CTRL_STUD_CODE 
,SAMP_CTRL_CODE = B.SAMP_CTRL_CODE  
,SAMP_STATUS_CODE = B.SAMP_STATUS_CODE 
,SIRE_ID = B.SIRE_ID 
,DAM_ID = B.DAM_ID 
,INTERNATIONAL_ID_IND = B.INTERNATIONAL_ID_IND  
,REGIS_STATUS_CODE = B.REGIS_STATUS_CODE 
,HERD_WITH_MOST_DAU = B.HERD_WITH_MOST_DAU 
;

